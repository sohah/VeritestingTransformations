Running Symbolic PathFinder ...
symbolic.dp=z3
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.bvlength=32
symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
choiceGeneratorRegistered(class gov.nasa.jpf.vm.choice.ThreadChoiceFromSet) at MethodInfo[java.lang.Boolean.[<clinit>]]#0
JavaPathfinder core system v8.0 (rev 32+) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
DiscoveryExamples.DiscoveryVoting.main()

====================================================== search started: 12/16/19 4:09 PM
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.main([Ljava/lang/String;)V]#15
New sym int a min=0, max=1
New sym int b min=0, max=1
New sym int c min=0, max=1
New sym int threshold min=-2147483648, max=2147483647
New sym int out min=0, max=1
New sym int symVar min=0, max=1
^_^ running jitAnalysis ^_^
Constructing class hierarchy...done!
Starting region analysis for makeStep(DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V)
Method
putfield 1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> > = 6
if ((! (== w7 0 ) )) {
   invokevirtual < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V > 1,2,3,4,5 @17 exception:10
} else {
   skip; 
}
return


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8
if ((! (== w7 0 ) )) {
   invokevirtual < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V > 1,2,3,4,5 @17 exception:10
} else {
   skip; 
}



Region Stack Slot Map (var -> slot)
@w7 --------- [6]
@w1 --------- [0]
@w2 --------- [1]
@w3 --------- [2]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w7 --------- 6
@w1 --------- 0
@w2 --------- 1
@w3 --------- 2
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w6 --------- boolean
@w1 --------- DiscoveryExamples.DiscoveryVoting
@w7 --------- boolean
@w2 --------- boolean
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (== w7$1 0 ) )) {
   
[] = invoke < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V >[w1$1, w2$1, w3$1, w4$1, w5$1]
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Input Table (var->slot)
w1$1 --------- 0
w2$1 --------- 1
w3$1 --------- 2
w4$1 --------- 3
w5$1 --------- 4
w7$1 --------- 6

printing WalaVarTypeTable ( var ->type)
w1$1 --------- DiscoveryExamples.DiscoveryVoting
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean

printing Region Output Table (slot->var)
Stack output: null
========================================= RUNNING FIXED POINT ITERATION # 1=========================================
Starting region analysis for vote2(DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V)
Method
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 
putfield 1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> > = 11
return


********** High Order Region Discovered for region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V


---------- STARTING Inlining Transformation for region: ---------------
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 

 put(w1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11

 return w-1



Region prior to removeEarlyReturns: if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 
putfield 1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> > = 11
return


Region after removeEarlyReturns: if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 

 put(w1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11
skip; 
~earlyReturnResult := w-1; 


--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (&& (! (== w2$2 0 ) ) (!= w3$2 0 ) ) (&& (&& (|| (== w2$2 0 ) (&& (! (== w2$2 0 ) ) (! (!= w3$2 0 ) ) ) ) (! (== w3$2 0 ) ) ) (!= w4$2 0 ) ) ) (&& (&& (|| (&& (|| (== w2$2 0 ) (&& (! (== w2$2 0 ) ) (! (!= w3$2 0 ) ) ) ) (== w3$2 0 ) ) (&& (&& (|| (== w2$2 0 ) (&& (! (== w2$2 0 ) ) (! (!= w3$2 0 ) ) ) ) (! (== w3$2 0 ) ) ) (! (!= w4$2 0 ) ) ) ) (! (== w2$2 0 ) ) ) (! (== w4$2 0 ) ) ) ) (! (>= w5$2 10 ) ) ) (! (<= w5$2 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$2 := (Gamma !(w2$2==0)&&w3$2!=0||w2$2==0||!(w2$2==0)&&!(w3$2!=0)&&!(w3$2==0)&&w4$2!=0||w2$2==0||!(w2$2==0)&&!(w3$2!=0)&&w3$2==0||w2$2==0||!(w2$2==0)&&!(w3$2!=0)&&!(w3$2==0)&&!(w4$2!=0)&&!(w2$2==0)&&!(w4$2==0)&&!(w5$2>=10)&&!(w5$2<=5) 1 0); 

 put(w1$2.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11$2
skip; 
~earlyReturnResult$2 := w-1$2; 


printing stack-slot table (var->param)
w1$2 --------- [0]
w2$2 --------- [1]
w3$2 --------- [2]
w4$2 --------- [3]
w5$2 --------- [4]

printing Region Input Table (var->param)
w1$2 --------- 0
w2$2 --------- 1
w3$2 --------- 2
w4$2 --------- 3
w5$2 --------- 4

printing WalaVarTypeTable ( var ->type)
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int

printing Region Output Table (return->var)
Stack output: null

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== w7$1 0 ) )) {
   
[] = invoke < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V >[w1$1, w2$1, w3$1, w4$1, w5$1]
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   
 put(347.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11$2
   skip; 
   skip; 
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int
Stack output: null

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int
Stack output: null

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$2; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$1 --------- [0]
w2$1 --------- [1]
w3$1 --------- [2]
w4$1 --------- [3]
w5$1 --------- [4]
w7$1 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$1 --------- LDiscoveryExamples/DiscoveryVoting;
w2$1 --------- boolean
w3$1 --------- boolean
w4$1 --------- boolean
w5$1 --------- int
w6$1 --------- boolean
w7$1 --------- boolean
w1$2 --------- DiscoveryExamples.DiscoveryVoting
w2$2 --------- boolean
w3$2 --------- boolean
w4$2 --------- boolean
w5$2 --------- int
w7$2 --------- int
w8$2 --------- int
w9$2 --------- int
w10$2 --------- int
w11$2 --------- int
Stack output: null

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
r347.out.1.1.2 := w11$2; 
skip; 
skip; 
skip; 
r347.out.1.3.2 := (Gamma !(symVar==0) r347.out.1.1.2 out); 


Stack output: null
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!repairing holes for iteration#:1
^-^Ranger Discovery Result ^-^
Initial repair found, in iteration #: 2
Trying minimal repair.
trying minimal good repair iteration #: 0
Trying candidate #: 0
Time of ThereExists Query of : Vote_All_depth3_0_0_rPrimeExists.lus= 3
Time of forAll Query of : Vote_All_depth3_0_0_forAllMinimal.lus= 1
Trying candidate #: 1
Time of ThereExists Query of : Vote_All_depth3_0_1_rPrimeExists.lus= 3
Time of forAll Query of : Vote_All_depth3_0_1_forAllMinimal.lus= 1
Trying candidate #: 2
Time of ThereExists Query of : Vote_All_depth3_0_2_rPrimeExists.lus= 3
Time of forAll Query of : Vote_All_depth3_0_2_forAllMinimal.lus= 1
Trying candidate #: 3
Time of ThereExists Query of : Vote_All_depth3_0_3_rPrimeExists.lus= 4
Time of forAll Query of : Vote_All_depth3_0_3_forAllMinimal.lus= 1
Trying candidate #: 4
Time of ThereExists Query of : Vote_All_depth3_0_4_rPrimeExists.lus= 5
Time of forAll Query of : Vote_All_depth3_0_4_forAllMinimal.lus= 1
Trying candidate #: 5
Time of ThereExists Query of : Vote_All_depth3_0_5_rPrimeExists.lus= 5
Time of forAll Query of : Vote_All_depth3_0_5_forAllMinimal.lus= 1
Trying candidate #: 6
Time of ThereExists Query of : Vote_All_depth3_0_6_rPrimeExists.lus= 5
Time of forAll Query of : Vote_All_depth3_0_6_forAllMinimal.lus= 1
Trying candidate #: 7
Time of ThereExists Query of : Vote_All_depth3_0_7_rPrimeExists.lus= 5
Time of forAll Query of : Vote_All_depth3_0_7_forAllMinimal.lus= 1
Trying candidate #: 8
Time of ThereExists Query of : Vote_All_depth3_0_8_rPrimeExists.lus= 7
Time of forAll Query of : Vote_All_depth3_0_8_forAllMinimal.lus= 1
Trying candidate #: 9
Time of ThereExists Query of : Vote_All_depth3_0_9_rPrimeExists.lus= 7
Time of forAll Query of : Vote_All_depth3_0_9_forAllMinimal.lus= 0
Trying candidate #: 10
Time of ThereExists Query of : Vote_All_depth3_0_10_rPrimeExists.lus= 14
Time of forAll Query of : Vote_All_depth3_0_10_forAllMinimal.lus= 0
Great! a tighter repair was found at, outer loop # = 2 minimal repair loop # = 0 successful candidate # = 10
trying minimal good repair iteration #: 1
Trying candidate #: 0
Time of ThereExists Query of : Vote_All_depth3_1_0_rPrimeExists.lus= 25
Time of forAll Query of : Vote_All_depth3_1_0_forAllMinimal.lus= 1
Trying candidate #: 1
Time of ThereExists Query of : Vote_All_depth3_1_1_rPrimeExists.lus= 11
Time of forAll Query of : Vote_All_depth3_1_1_forAllMinimal.lus= 0
Great! a tighter repair was found at, outer loop # = 2 minimal repair loop # = 1 successful candidate # = 1
trying minimal good repair iteration #: 2
Trying candidate #: 0
Time of ThereExists Query of : Vote_All_depth3_2_0_rPrimeExists.lus= 28
Time of forAll Query of : Vote_All_depth3_2_0_forAllMinimal.lus= 1
Trying candidate #: 1
Time of ThereExists Query of : Vote_All_depth3_2_1_rPrimeExists.lus= 69
Time of forAll Query of : Vote_All_depth3_2_1_forAllMinimal.lus= 1
Great! a tighter repair was found at, outer loop # = 2 minimal repair loop # = 2 successful candidate # = 1
trying minimal good repair iteration #: 3
Trying candidate #: 0
Time of ThereExists Query of : Vote_All_depth3_3_0_rPrimeExists.lus= 300
^-^ Ranger Discovery Result ^-^
Unknown solver output , No more R' can be found, returning last known good repair.
Great!! Minimal repair was found at, outer loop # = 2 minimal repair loop # = 2 the LAST candidate repair loop # = 1

--------------- NO-SKIP OPTIMIZATION ---------------
w11$2 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
r347.out.1.1.2 := w11$2; 
r347.out.1.3.2 := (Gamma !(symVar==0) r347.out.1.1.2 out); 


--------------- TO GREEN TRANSFORMATION ---------------
|Stmt                                                                  |Green Expression                                                                                   
|-----------------------------------------------------------           |------------------------------------------------------                                             
w11$2 := ((Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0) ) ((((0 == 0) && ((((((!(a == 0)) && (b != 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (c != 0))) || ((((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (b == 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (!(c != 0)))) && (!(a == 0))) && (!(c == 0)))) && (!(threshold >= 10))) && (!(threshold <= 5)))) && (w11$2 == 1)) || (((0 == 0) && (!((((((!(a == 0)) && (b != 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (c != 0))) || ((((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (b == 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (!(c != 0)))) && (!(a == 0))) && (!(c == 0)))) && (!(threshold >= 10))) && (!(threshold <= 5))))) && (w11$2 == 0)))
r347.out.1.1.2 := (w11$2 )                                             (r347.out.1.1.2 == w11$2)                                                                           
r347.out.1.3.2 := ((Gamma !(symVar==0) r347.out.1.1.2 out) )           ((((0 == 0) && (!(symVar == 0))) && (r347.out.1.3.2 == r347.out.1.1.2)) || (((0 == 0) && (!(!(symVar == 0)))) && (r347.out.1.3.2 == out)))

Green Expression pushed on the Path Condition:
((((((0 == 0) && ((((((!(a == 0)) && (b != 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (c != 0))) || ((((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (b == 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (!(c != 0)))) && (!(a == 0))) && (!(c == 0)))) && (!(threshold >= 10))) && (!(threshold <= 5)))) && (w11$2 == 1)) || (((0 == 0) && (!((((((!(a == 0)) && (b != 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (c != 0))) || ((((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (b == 0)) || ((((a == 0) || ((!(a == 0)) && (!(b != 0)))) && (!(b == 0))) && (!(c != 0)))) && (!(a == 0))) && (!(c == 0)))) && (!(threshold >= 10))) && (!(threshold <= 5))))) && (w11$2 == 0))) && (r347.out.1.1.2 == w11$2)) && ((((0 == 0) && (!(symVar == 0))) && (r347.out.1.3.2 == r347.out.1.1.2)) || (((0 == 0) && (!(!(symVar == 0)))) && (r347.out.1.3.2 == out))))
Stack output: null
numeric PC: constraint # = 1
0==0&&!(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5)&&w11$2==1||0==0&&!(!(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5))&&w11$2==0&&r347.out.1.1.2==w11$2&&0==0&&!(symVar==0)&&r347.out.1.3.2==r347.out.1.1.2||0==0&&!(!(symVar==0))&&r347.out.1.3.2==out -> true

### PCs: total:1 sat:1 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
0==0&&!(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5)&&w11$2==1||0==0&&!(!(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5))&&w11$2==0&&r347.out.1.1.2==w11$2&&0==0&&!(symVar==0)&&r347.out.1.3.2==r347.out.1.1.2||0==0&&!(!(symVar==0))&&r347.out.1.3.2==out
New sym int r347.out.1.3.2 min=-2147483648, max=2147483647
------------- Region was successfully veritested --------------- 
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.main([Ljava/lang/String;)V]#15
choiceGeneratorProcessed: at MethodInfo[java.lang.Boolean.[<clinit>]]#0

====================================================== VeritestingListener report:

/************************ Printing Exception Statistics *****************
Static Analysis exceptions count = 0
Instantiation Time exceptions count = 0
Unknown phases exception count = 0


/************************ Printing Time Decomposition Statistics *****************
static analysis time = 11792 msec
Veritesting Dyn Time = 533651 msec
Veritesting fix-pint Time = 136 msec

/************************ Printing Solver Statistics *****************
Total Solver Queries Count = 0
Total Solver Time = 49 msec
Total Solver Parse Time = 13 msec
Region Summary Parse Time = 0 msec
Total Solver Clean up Time = 0 msec
PCSatSolverCount = 1
PCSatSolverTime = 61 msec
Constant Propagation Time for PC sat. checks = 0
Array SPF Case count = 0
If-removed count = 0

/************************ Printing Region Statistics *****************
Number of Distinct Veritested Regions = 1
Number of Distinct Un-Veritested Symbolic Regions = 0
Number of Distinct Failed Regions for Field Reference = 0
Number of Distinct Failed Regions for SPFCases = 0
Number of Distinct Failed Regions for missing method summaries = 0
Number of Distinct Failed Regions for Other Reasons = 0
Number of High Order Regions Used = 1

/************************ Printing Instantiation Statistics *****************
Number of successful instantiations = 1
Total Number of unsuccessful instantiations = 0
Number of failed instantiations due to Field Reference = 0
Number of failed instantiations due to SPFCases = 0
Number of failed instantiations due to missing method summaries = 0
Number of failed instantiations due to Other Reasons = 0


Number of Veritested Regions Instances = 1
Printing keys of regions that were instantiated at least once
DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8
Finished printing keys of regions that were instantiated at least once

Metrics Vector:
545443,11792,533651,1,0,49,13,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,2,1,1,2,2.0,0,0,0
Contract is repaired in iteration number:2
====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:09:05
states:             new=2,visited=0,backtracked=2,end=1
search:             maxDepth=2,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=1
heap:               new=347,released=12,maxLive=345,gcCycles=2
instructions:       3127
max memory:         558MB
loaded code:        classes=60,methods=1284

====================================================== search finished: 12/16/19 4:18 PM
---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$3 --------- [0]
w2$3 --------- [1]
w3$3 --------- [2]
w4$3 --------- [3]
w5$3 --------- [4]
w7$3 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$3 --------- LDiscoveryExamples/DiscoveryVoting;
w2$3 --------- boolean
w3$3 --------- boolean
w4$3 --------- boolean
w5$3 --------- int
w6$3 --------- boolean
w7$3 --------- boolean
w1$4 --------- DiscoveryExamples.DiscoveryVoting
w2$4 --------- boolean
w3$4 --------- boolean
w4$4 --------- boolean
w5$4 --------- int
w7$4 --------- int
w8$4 --------- int
w9$4 --------- int
w10$4 --------- int
w11$4 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$3 --------- [0]
w2$3 --------- [1]
w3$3 --------- [2]
w4$3 --------- [3]
w5$3 --------- [4]
w7$3 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$3 --------- LDiscoveryExamples/DiscoveryVoting;
w2$3 --------- boolean
w3$3 --------- boolean
w4$3 --------- boolean
w5$3 --------- int
w6$3 --------- boolean
w7$3 --------- boolean
w1$4 --------- DiscoveryExamples.DiscoveryVoting
w2$4 --------- boolean
w3$4 --------- boolean
w4$4 --------- boolean
w5$4 --------- int
w7$4 --------- int
w8$4 --------- int
w9$4 --------- int
w10$4 --------- int
w11$4 --------- int
Stack output: null

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$3 --------- [0]
w2$3 --------- [1]
w3$3 --------- [2]
w4$3 --------- [3]
w5$3 --------- [4]
w7$3 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$3 --------- LDiscoveryExamples/DiscoveryVoting;
w2$3 --------- boolean
w3$3 --------- boolean
w4$3 --------- boolean
w5$3 --------- int
w6$3 --------- boolean
w7$3 --------- boolean
w1$4 --------- DiscoveryExamples.DiscoveryVoting
w2$4 --------- boolean
w3$4 --------- boolean
w4$4 --------- boolean
w5$4 --------- int
w7$4 --------- int
w8$4 --------- int
w9$4 --------- int
w10$4 --------- int
w11$4 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$4; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$3 --------- [0]
w2$3 --------- [1]
w3$3 --------- [2]
w4$3 --------- [3]
w5$3 --------- [4]
w7$3 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$3 --------- LDiscoveryExamples/DiscoveryVoting;
w2$3 --------- boolean
w3$3 --------- boolean
w4$3 --------- boolean
w5$3 --------- int
w6$3 --------- boolean
w7$3 --------- boolean
w1$4 --------- DiscoveryExamples.DiscoveryVoting
w2$4 --------- boolean
w3$4 --------- boolean
w4$4 --------- boolean
w5$4 --------- int
w7$4 --------- int
w8$4 --------- int
w9$4 --------- int
w10$4 --------- int
w11$4 --------- int
Stack output: null

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$4 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
r347.out.1.1.4 := w11$4; 
skip; 
skip; 
skip; 
r347.out.1.3.4 := (Gamma !(symVar==0) r347.out.1.1.4 out); 


Stack output: null
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
Starting region analysis for vote2(DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V)
Method
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 
putfield 1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> > = 11
return


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w3 --------- [2]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w3 --------- 2
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (&& (! (== w2$5 0 ) ) (!= w3$5 0 ) ) (&& (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (! (== w3$5 0 ) ) ) (!= w4$5 0 ) ) ) (&& (&& (|| (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (== w3$5 0 ) ) (&& (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (! (== w3$5 0 ) ) ) (! (!= w4$5 0 ) ) ) ) (! (== w2$5 0 ) ) ) (! (== w4$5 0 ) ) ) ) (! (>= w5$5 10 ) ) ) (! (<= w5$5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(w2$5==0)&&w3$5!=0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&!(w3$5==0)&&w4$5!=0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&w3$5==0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&!(w3$5==0)&&!(w4$5!=0)&&!(w2$5==0)&&!(w4$5==0)&&!(w5$5>=10)&&!(w5$5<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Input Table (var->slot)
w2$5 --------- 1
w3$5 --------- 2
w4$5 --------- 3
w5$5 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== w2$5 0 ) ) (!= w3$5 0 ) ) (&& (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (! (== w3$5 0 ) ) ) (!= w4$5 0 ) ) ) (&& (&& (|| (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (== w3$5 0 ) ) (&& (&& (|| (== w2$5 0 ) (&& (! (== w2$5 0 ) ) (! (!= w3$5 0 ) ) ) ) (! (== w3$5 0 ) ) ) (! (!= w4$5 0 ) ) ) ) (! (== w2$5 0 ) ) ) (! (== w4$5 0 ) ) ) ) (! (>= w5$5 10 ) ) ) (! (<= w5$5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(w2$5==0)&&w3$5!=0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&!(w3$5==0)&&w4$5!=0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&w3$5==0||w2$5==0||!(w2$5==0)&&!(w3$5!=0)&&!(w3$5==0)&&!(w4$5!=0)&&!(w2$5==0)&&!(w4$5==0)&&!(w5$5>=10)&&!(w5$5<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$5 --------- [1]
w3$5 --------- [2]
w4$5 --------- [3]
w5$5 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$5 --------- boolean
w3$5 --------- boolean
w4$5 --------- boolean
w5$5 --------- int
w7$5 --------- int
w8$5 --------- int
w9$5 --------- int
w10$5 --------- int
w11$5 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$5 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$5
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 2
a = 0 &&
symVar != 0 -> true

### PCs: total:3 sat:3 unsat:0

string analysis: SPC # = 0
NPC constraint # = 2
a = 0 &&
symVar != 0
numeric PC: constraint # = 2
a != 0 &&
symVar != 0 -> true

### PCs: total:4 sat:4 unsat:0

string analysis: SPC # = 0
NPC constraint # = 2
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#2

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w3 --------- [2]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w3 --------- 2
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (&& (! (== w2$6 0 ) ) (!= w3$6 0 ) ) (&& (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (! (== w3$6 0 ) ) ) (!= w4$6 0 ) ) ) (&& (&& (|| (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (== w3$6 0 ) ) (&& (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (! (== w3$6 0 ) ) ) (! (!= w4$6 0 ) ) ) ) (! (== w2$6 0 ) ) ) (! (== w4$6 0 ) ) ) ) (! (>= w5$6 10 ) ) ) (! (<= w5$6 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(w2$6==0)&&w3$6!=0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&!(w3$6==0)&&w4$6!=0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&w3$6==0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&!(w3$6==0)&&!(w4$6!=0)&&!(w2$6==0)&&!(w4$6==0)&&!(w5$6>=10)&&!(w5$6<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Input Table (var->slot)
w2$6 --------- 1
w3$6 --------- 2
w4$6 --------- 3
w5$6 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== w2$6 0 ) ) (!= w3$6 0 ) ) (&& (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (! (== w3$6 0 ) ) ) (!= w4$6 0 ) ) ) (&& (&& (|| (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (== w3$6 0 ) ) (&& (&& (|| (== w2$6 0 ) (&& (! (== w2$6 0 ) ) (! (!= w3$6 0 ) ) ) ) (! (== w3$6 0 ) ) ) (! (!= w4$6 0 ) ) ) ) (! (== w2$6 0 ) ) ) (! (== w4$6 0 ) ) ) ) (! (>= w5$6 10 ) ) ) (! (<= w5$6 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(w2$6==0)&&w3$6!=0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&!(w3$6==0)&&w4$6!=0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&w3$6==0||w2$6==0||!(w2$6==0)&&!(w3$6!=0)&&!(w3$6==0)&&!(w4$6!=0)&&!(w2$6==0)&&!(w4$6==0)&&!(w5$6>=10)&&!(w5$6<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$6 --------- [1]
w3$6 --------- [2]
w4$6 --------- [3]
w5$6 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$6 --------- boolean
w3$6 --------- boolean
w4$6 --------- boolean
w5$6 --------- int
w7$6 --------- int
w8$6 --------- int
w9$6 --------- int
w10$6 --------- int
w11$6 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$6 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$6
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6
if ((&& (&& (|| (|| (!= w3 0 ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (! (!= w3 0 ) ) (== w3 0 ) ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w3!=0||!(w3!=0)&&!(w3==0)&&w4!=0||!(w3!=0)&&w3==0||!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (!= w3$7 0 ) (&& (&& (! (!= w3$7 0 ) ) (! (== w3$7 0 ) ) ) (!= w4$7 0 ) ) ) (&& (&& (|| (&& (! (!= w3$7 0 ) ) (== w3$7 0 ) ) (&& (&& (! (!= w3$7 0 ) ) (! (== w3$7 0 ) ) ) (! (!= w4$7 0 ) ) ) ) (! (== w2$7 0 ) ) ) (! (== w4$7 0 ) ) ) ) (! (>= w5$7 10 ) ) ) (! (<= w5$7 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma w3$7!=0||!(w3$7!=0)&&!(w3$7==0)&&w4$7!=0||!(w3$7!=0)&&w3$7==0||!(w3$7!=0)&&!(w3$7==0)&&!(w4$7!=0)&&!(w2$7==0)&&!(w4$7==0)&&!(w5$7>=10)&&!(w5$7<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Input Table (var->slot)
w2$7 --------- 1
w3$7 --------- 2
w4$7 --------- 3
w5$7 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= w3$7 0 ) (&& (&& (! (!= w3$7 0 ) ) (! (== w3$7 0 ) ) ) (!= w4$7 0 ) ) ) (&& (&& (|| (&& (! (!= w3$7 0 ) ) (== w3$7 0 ) ) (&& (&& (! (!= w3$7 0 ) ) (! (== w3$7 0 ) ) ) (! (!= w4$7 0 ) ) ) ) (! (== w2$7 0 ) ) ) (! (== w4$7 0 ) ) ) ) (! (>= w5$7 10 ) ) ) (! (<= w5$7 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma w3$7!=0||!(w3$7!=0)&&!(w3$7==0)&&w4$7!=0||!(w3$7!=0)&&w3$7==0||!(w3$7!=0)&&!(w3$7==0)&&!(w4$7!=0)&&!(w2$7==0)&&!(w4$7==0)&&!(w5$7>=10)&&!(w5$7<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$7 --------- [1]
w3$7 --------- [2]
w4$7 --------- [3]
w5$7 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$7 --------- boolean
w3$7 --------- boolean
w4$7 --------- boolean
w5$7 --------- int
w7$7 --------- int
w8$7 --------- int
w9$7 --------- int
w10$7 --------- int
w11$7 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$7 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$7
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 3
b != 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:5 sat:5 unsat:0

string analysis: SPC # = 0
NPC constraint # = 3
b != 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:6 sat:6 unsat:0

string analysis: SPC # = 0
NPC constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#6

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6
if ((&& (&& (|| (|| (!= w3 0 ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (! (!= w3 0 ) ) (== w3 0 ) ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w3!=0||!(w3!=0)&&!(w3==0)&&w4!=0||!(w3!=0)&&w3==0||!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (!= w3$8 0 ) (&& (&& (! (!= w3$8 0 ) ) (! (== w3$8 0 ) ) ) (!= w4$8 0 ) ) ) (&& (&& (|| (&& (! (!= w3$8 0 ) ) (== w3$8 0 ) ) (&& (&& (! (!= w3$8 0 ) ) (! (== w3$8 0 ) ) ) (! (!= w4$8 0 ) ) ) ) (! (== w2$8 0 ) ) ) (! (== w4$8 0 ) ) ) ) (! (>= w5$8 10 ) ) ) (! (<= w5$8 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma w3$8!=0||!(w3$8!=0)&&!(w3$8==0)&&w4$8!=0||!(w3$8!=0)&&w3$8==0||!(w3$8!=0)&&!(w3$8==0)&&!(w4$8!=0)&&!(w2$8==0)&&!(w4$8==0)&&!(w5$8>=10)&&!(w5$8<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Input Table (var->slot)
w2$8 --------- 1
w3$8 --------- 2
w4$8 --------- 3
w5$8 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= w3$8 0 ) (&& (&& (! (!= w3$8 0 ) ) (! (== w3$8 0 ) ) ) (!= w4$8 0 ) ) ) (&& (&& (|| (&& (! (!= w3$8 0 ) ) (== w3$8 0 ) ) (&& (&& (! (!= w3$8 0 ) ) (! (== w3$8 0 ) ) ) (! (!= w4$8 0 ) ) ) ) (! (== w2$8 0 ) ) ) (! (== w4$8 0 ) ) ) ) (! (>= w5$8 10 ) ) ) (! (<= w5$8 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma w3$8!=0||!(w3$8!=0)&&!(w3$8==0)&&w4$8!=0||!(w3$8!=0)&&w3$8==0||!(w3$8!=0)&&!(w3$8==0)&&!(w4$8!=0)&&!(w2$8==0)&&!(w4$8==0)&&!(w5$8>=10)&&!(w5$8<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$8 --------- [1]
w3$8 --------- [2]
w4$8 --------- [3]
w5$8 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$8 --------- boolean
w3$8 --------- boolean
w4$8 --------- boolean
w5$8 --------- int
w7$8 --------- int
w8$8 --------- int
w9$8 --------- int
w10$8 --------- int
w11$8 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$8 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$8
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10
if ((&& (&& (|| (&& (! (== w3 0 ) ) (!= w4 0 ) ) (&& (&& (|| (== w3 0 ) (&& (! (== w3 0 ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w3==0)&&w4!=0||w3==0||!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (&& (! (== w3$9 0 ) ) (!= w4$9 0 ) ) (&& (&& (|| (== w3$9 0 ) (&& (! (== w3$9 0 ) ) (! (!= w4$9 0 ) ) ) ) (! (== w2$9 0 ) ) ) (! (== w4$9 0 ) ) ) ) (! (>= w5$9 10 ) ) ) (! (<= w5$9 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(w3$9==0)&&w4$9!=0||w3$9==0||!(w3$9==0)&&!(w4$9!=0)&&!(w2$9==0)&&!(w4$9==0)&&!(w5$9>=10)&&!(w5$9<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Input Table (var->slot)
w2$9 --------- 1
w3$9 --------- 2
w4$9 --------- 3
w5$9 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== w3$9 0 ) ) (!= w4$9 0 ) ) (&& (&& (|| (== w3$9 0 ) (&& (! (== w3$9 0 ) ) (! (!= w4$9 0 ) ) ) ) (! (== w2$9 0 ) ) ) (! (== w4$9 0 ) ) ) ) (! (>= w5$9 10 ) ) ) (! (<= w5$9 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(w3$9==0)&&w4$9!=0||w3$9==0||!(w3$9==0)&&!(w4$9!=0)&&!(w2$9==0)&&!(w4$9==0)&&!(w5$9>=10)&&!(w5$9<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$9 --------- [1]
w3$9 --------- [2]
w4$9 --------- [3]
w5$9 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$9 --------- boolean
w3$9 --------- boolean
w4$9 --------- boolean
w5$9 --------- int
w7$9 --------- int
w8$9 --------- int
w9$9 --------- int
w10$9 --------- int
w11$9 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$9 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$9
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:7 sat:7 unsat:0

string analysis: SPC # = 0
NPC constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 4
b != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> false

### PCs: total:8 sat:7 unsat:1


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18
if ((&& (&& (&& (! (== w2 0 ) ) (! (== w4 0 ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (&& (! (== w2$10 0 ) ) (! (== w4$10 0 ) ) ) (! (>= w5$10 10 ) ) ) (! (<= w5$10 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(w2$10==0)&&!(w4$10==0)&&!(w5$10>=10)&&!(w5$10<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Input Table (var->slot)
w2$10 --------- 1
w4$10 --------- 3
w5$10 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== w2$10 0 ) ) (! (== w4$10 0 ) ) ) (! (>= w5$10 10 ) ) ) (! (<= w5$10 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(w2$10==0)&&!(w4$10==0)&&!(w5$10>=10)&&!(w5$10<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$10 --------- [1]
w4$10 --------- [3]
w5$10 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$10 --------- boolean
w3$10 --------- boolean
w4$10 --------- boolean
w5$10 --------- int
w7$10 --------- int
w8$10 --------- int
w9$10 --------- int
w10$10 --------- int
w11$10 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$10 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$10
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 4
a = 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> false

### PCs: total:9 sat:7 unsat:2

numeric PC: constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:10 sat:8 unsat:2

string analysis: SPC # = 0
NPC constraint # = 3
b = 0 &&
a != 0 &&
symVar != 0

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22
if ((&& (&& (! (== w4 0 ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (! (== w4$11 0 ) ) (! (>= w5$11 10 ) ) ) (! (<= w5$11 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(w4$11==0)&&!(w5$11>=10)&&!(w5$11<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Input Table (var->slot)
w4$11 --------- 3
w5$11 --------- 4

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== w4$11 0 ) ) (! (>= w5$11 10 ) ) ) (! (<= w5$11 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(w4$11==0)&&!(w5$11>=10)&&!(w5$11<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$11 --------- [3]
w5$11 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$11 --------- boolean
w5$11 --------- int
w7$11 --------- int
w8$11 --------- int
w9$11 --------- int
w10$11 --------- int
w11$11 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$11 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$11
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 4
c = 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:11 sat:9 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
c = 0 &&
b = 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 4
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:12 sat:10 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#22

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22
if ((&& (&& (! (== w4 0 ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (! (== w4$12 0 ) ) (! (>= w5$12 10 ) ) ) (! (<= w5$12 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(w4$12==0)&&!(w5$12>=10)&&!(w5$12<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Input Table (var->slot)
w4$12 --------- 3
w5$12 --------- 4

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== w4$12 0 ) ) (! (>= w5$12 10 ) ) ) (! (<= w5$12 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(w4$12==0)&&!(w5$12>=10)&&!(w5$12<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$12 --------- [3]
w5$12 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$12 --------- boolean
w5$12 --------- int
w7$12 --------- int
w8$12 --------- int
w9$12 --------- int
w10$12 --------- int
w11$12 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$12 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$12
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$13 10 ) ) (! (<= w5$13 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(w5$13>=10)&&!(w5$13<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Input Table (var->slot)
w5$13 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$13 10 ) ) (! (<= w5$13 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(w5$13>=10)&&!(w5$13<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$13 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$13 --------- int
w7$13 --------- int
w8$13 --------- int
w9$13 --------- int
w10$13 --------- int
w11$13 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$13 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$13
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 5
threshold >= 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:13 sat:11 unsat:2

string analysis: SPC # = 0
NPC constraint # = 5
threshold >= 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 5
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:14 sat:12 unsat:2

string analysis: SPC # = 0
NPC constraint # = 5
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$14 10 ) ) (! (<= w5$14 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(w5$14>=10)&&!(w5$14<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Input Table (var->slot)
w5$14 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$14 10 ) ) (! (<= w5$14 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(w5$14>=10)&&!(w5$14<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$14 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$14 --------- int
w7$14 --------- int
w8$14 --------- int
w9$14 --------- int
w10$14 --------- int
w11$14 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$14 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$14
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$15 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(w5$15<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Input Table (var->slot)
w5$15 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$15 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(w5$15<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$15 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$15 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$15 --------- int
w7$15 --------- int
w8$15 --------- int
w9$15 --------- int
w10$15 --------- int
w11$15 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$15 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$15
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 6
threshold <= 5 &&
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:15 sat:13 unsat:2

string analysis: SPC # = 0
NPC constraint # = 6
threshold <= 5 &&
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 6
threshold > 5 &&
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:16 sat:14 unsat:2

string analysis: SPC # = 0
NPC constraint # = 6
threshold > 5 &&
threshold < 10 &&
c != 0 &&
b = 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$16 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(w5$16<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Input Table (var->slot)
w5$16 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$16 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(w5$16<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$16 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$16 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$16 --------- int
w7$16 --------- int
w8$16 --------- int
w9$16 --------- int
w10$16 --------- int
w11$16 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$16 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$16
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$17 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(w5$17<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Input Table (var->slot)
w5$17 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$17 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(w5$17<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$17 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$17 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$17 --------- int
w7$17 --------- int
w8$17 --------- int
w9$17 --------- int
w10$17 --------- int
w11$17 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$17 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$17
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$18 10 ) ) (! (<= w5$18 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(w5$18>=10)&&!(w5$18<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Input Table (var->slot)
w5$18 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$18 10 ) ) (! (<= w5$18 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(w5$18>=10)&&!(w5$18<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$18 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$18 --------- int
w7$18 --------- int
w8$18 --------- int
w9$18 --------- int
w10$18 --------- int
w11$18 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$18 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$18
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22
if ((&& (&& (! (== w4 0 ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (! (== w4$19 0 ) ) (! (>= w5$19 10 ) ) ) (! (<= w5$19 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(w4$19==0)&&!(w5$19>=10)&&!(w5$19<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Input Table (var->slot)
w4$19 --------- 3
w5$19 --------- 4

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== w4$19 0 ) ) (! (>= w5$19 10 ) ) ) (! (<= w5$19 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(w4$19==0)&&!(w5$19>=10)&&!(w5$19<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#22 ---------------

if ((&& (&& (! (== c 0 ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w4$19 --------- [3]
w5$19 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w4$19 --------- boolean
w5$19 --------- int
w7$19 --------- int
w8$19 --------- int
w9$19 --------- int
w10$19 --------- int
w11$19 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$19 := (Gamma !(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$19
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#22

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6
if ((&& (&& (|| (|| (!= w3 0 ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (! (!= w3 0 ) ) (== w3 0 ) ) (&& (&& (! (!= w3 0 ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w3!=0||!(w3!=0)&&!(w3==0)&&w4!=0||!(w3!=0)&&w3==0||!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (!= w3$20 0 ) (&& (&& (! (!= w3$20 0 ) ) (! (== w3$20 0 ) ) ) (!= w4$20 0 ) ) ) (&& (&& (|| (&& (! (!= w3$20 0 ) ) (== w3$20 0 ) ) (&& (&& (! (!= w3$20 0 ) ) (! (== w3$20 0 ) ) ) (! (!= w4$20 0 ) ) ) ) (! (== w2$20 0 ) ) ) (! (== w4$20 0 ) ) ) ) (! (>= w5$20 10 ) ) ) (! (<= w5$20 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma w3$20!=0||!(w3$20!=0)&&!(w3$20==0)&&w4$20!=0||!(w3$20!=0)&&w3$20==0||!(w3$20!=0)&&!(w3$20==0)&&!(w4$20!=0)&&!(w2$20==0)&&!(w4$20==0)&&!(w5$20>=10)&&!(w5$20<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Input Table (var->slot)
w2$20 --------- 1
w3$20 --------- 2
w4$20 --------- 3
w5$20 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= w3$20 0 ) (&& (&& (! (!= w3$20 0 ) ) (! (== w3$20 0 ) ) ) (!= w4$20 0 ) ) ) (&& (&& (|| (&& (! (!= w3$20 0 ) ) (== w3$20 0 ) ) (&& (&& (! (!= w3$20 0 ) ) (! (== w3$20 0 ) ) ) (! (!= w4$20 0 ) ) ) ) (! (== w2$20 0 ) ) ) (! (== w4$20 0 ) ) ) ) (! (>= w5$20 10 ) ) ) (! (<= w5$20 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma w3$20!=0||!(w3$20!=0)&&!(w3$20==0)&&w4$20!=0||!(w3$20!=0)&&w3$20==0||!(w3$20!=0)&&!(w3$20==0)&&!(w4$20!=0)&&!(w2$20==0)&&!(w4$20==0)&&!(w5$20>=10)&&!(w5$20<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#6 ---------------

if ((&& (&& (|| (|| (!= b 0 ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (! (!= b 0 ) ) (== b 0 ) ) (&& (&& (! (!= b 0 ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$20 --------- [1]
w3$20 --------- [2]
w4$20 --------- [3]
w5$20 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$20 --------- boolean
w3$20 --------- boolean
w4$20 --------- boolean
w5$20 --------- int
w7$20 --------- int
w8$20 --------- int
w9$20 --------- int
w10$20 --------- int
w11$20 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$20 := (Gamma b!=0||!(b!=0)&&!(b==0)&&c!=0||!(b!=0)&&b==0||!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$20
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$21 10 ) ) (! (<= w5$21 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(w5$21>=10)&&!(w5$21<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Input Table (var->slot)
w5$21 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$21 10 ) ) (! (<= w5$21 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(w5$21>=10)&&!(w5$21<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- intjkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$21 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$21 --------- int
w7$21 --------- int
w8$21 --------- int
w9$21 --------- int
w10$21 --------- int
w11$21 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$21 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$21
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

numeric PC: constraint # = 4
threshold >= 10 &&
b != 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:17 sat:15 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
threshold >= 10 &&
b != 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 4
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:18 sat:16 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$22 10 ) ) (! (<= w5$22 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(w5$22>=10)&&!(w5$22<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Input Table (var->slot)
w5$22 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$22 10 ) ) (! (<= w5$22 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(w5$22>=10)&&!(w5$22<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$22 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$22 --------- int
w7$22 --------- int
w8$22 --------- int
w9$22 --------- int
w10$22 --------- int
w11$22 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$22 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$22
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$23 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(w5$23<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Input Table (var->slot)
w5$23 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$23 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(w5$23<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$23 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$23 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$23 --------- int
w7$23 --------- int
w8$23 --------- int
w9$23 --------- int
w10$23 --------- int
w11$23 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$23 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$23
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

numeric PC: constraint # = 5
threshold <= 5 &&
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:19 sat:17 unsat:2

string analysis: SPC # = 0
NPC constraint # = 5
threshold <= 5 &&
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0
numeric PC: constraint # = 5
threshold > 5 &&
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0 -> true

### PCs: total:20 sat:18 unsat:2

string analysis: SPC # = 0
NPC constraint # = 5
threshold > 5 &&
threshold < 10 &&
b != 0 &&
a != 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$24 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(w5$24<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Input Table (var->slot)
w5$24 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$24 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(w5$24<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$24 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$24 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$24 --------- int
w7$24 --------- int
w8$24 --------- int
w9$24 --------- int
w10$24 --------- int
w11$24 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$24 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$24
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$25 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(w5$25<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Input Table (var->slot)
w5$25 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$25 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(w5$25<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$25 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$25 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$25 --------- int
w7$25 --------- int
w8$25 --------- int
w9$25 --------- int
w10$25 --------- int
w11$25 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$25 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$25
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$26 10 ) ) (! (<= w5$26 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(w5$26>=10)&&!(w5$26<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Input Table (var->slot)
w5$26 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$26 10 ) ) (! (<= w5$26 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(w5$26>=10)&&!(w5$26<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$26 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$26 --------- int
w7$26 --------- int
w8$26 --------- int
w9$26 --------- int
w10$26 --------- int
w11$26 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$26 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$26
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#6

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w3 --------- [2]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w3 --------- 2
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (&& (! (== w2$27 0 ) ) (!= w3$27 0 ) ) (&& (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (! (== w3$27 0 ) ) ) (!= w4$27 0 ) ) ) (&& (&& (|| (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (== w3$27 0 ) ) (&& (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (! (== w3$27 0 ) ) ) (! (!= w4$27 0 ) ) ) ) (! (== w2$27 0 ) ) ) (! (== w4$27 0 ) ) ) ) (! (>= w5$27 10 ) ) ) (! (<= w5$27 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(w2$27==0)&&w3$27!=0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&!(w3$27==0)&&w4$27!=0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&w3$27==0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&!(w3$27==0)&&!(w4$27!=0)&&!(w2$27==0)&&!(w4$27==0)&&!(w5$27>=10)&&!(w5$27<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Input Table (var->slot)
w2$27 --------- 1
w3$27 --------- 2
w4$27 --------- 3
w5$27 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== w2$27 0 ) ) (!= w3$27 0 ) ) (&& (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (! (== w3$27 0 ) ) ) (!= w4$27 0 ) ) ) (&& (&& (|| (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (== w3$27 0 ) ) (&& (&& (|| (== w2$27 0 ) (&& (! (== w2$27 0 ) ) (! (!= w3$27 0 ) ) ) ) (! (== w3$27 0 ) ) ) (! (!= w4$27 0 ) ) ) ) (! (== w2$27 0 ) ) ) (! (== w4$27 0 ) ) ) ) (! (>= w5$27 10 ) ) ) (! (<= w5$27 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(w2$27==0)&&w3$27!=0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&!(w3$27==0)&&w4$27!=0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&w3$27==0||w2$27==0||!(w2$27==0)&&!(w3$27!=0)&&!(w3$27==0)&&!(w4$27!=0)&&!(w2$27==0)&&!(w4$27==0)&&!(w5$27>=10)&&!(w5$27<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#2 ---------------

if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$27 --------- [1]
w3$27 --------- [2]
w4$27 --------- [3]
w5$27 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$27 --------- boolean
w3$27 --------- boolean
w4$27 --------- boolean
w5$27 --------- int
w7$27 --------- int
w8$27 --------- int
w9$27 --------- int
w10$27 --------- int
w11$27 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$27 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$27
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
valhole_12: inthole;
^


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10
if ((&& (&& (|| (&& (! (== w3 0 ) ) (!= w4 0 ) ) (&& (&& (|| (== w3 0 ) (&& (! (== w3 0 ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w3==0)&&w4!=0||w3==0||!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (&& (! (== w3$28 0 ) ) (!= w4$28 0 ) ) (&& (&& (|| (== w3$28 0 ) (&& (! (== w3$28 0 ) ) (! (!= w4$28 0 ) ) ) ) (! (== w2$28 0 ) ) ) (! (== w4$28 0 ) ) ) ) (! (>= w5$28 10 ) ) ) (! (<= w5$28 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(w3$28==0)&&w4$28!=0||w3$28==0||!(w3$28==0)&&!(w4$28!=0)&&!(w2$28==0)&&!(w4$28==0)&&!(w5$28>=10)&&!(w5$28<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Input Table (var->slot)
w2$28 --------- 1
w3$28 --------- 2
w4$28 --------- 3
w5$28 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== w3$28 0 ) ) (!= w4$28 0 ) ) (&& (&& (|| (== w3$28 0 ) (&& (! (== w3$28 0 ) ) (! (!= w4$28 0 ) ) ) ) (! (== w2$28 0 ) ) ) (! (== w4$28 0 ) ) ) ) (! (>= w5$28 10 ) ) ) (! (<= w5$28 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(w3$28==0)&&w4$28!=0||w3$28==0||!(w3$28==0)&&!(w4$28!=0)&&!(w2$28==0)&&!(w4$28==0)&&!(w5$28>=10)&&!(w5$28<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
w10$28 --------- int
w11$28 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$28 --------- [1]
w3$28 --------- [2]
w4$28 --------- [3]
w5$28 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$28 --------- boolean
w3$28 --------- boolean
w4$28 --------- boolean
w5$28 --------- int
w7$28 --------- int
w8$28 --------- int
w9$28 --------- int
w10$28 --------- int
w11$28 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$28 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$28
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

numeric PC: constraint # = 3
b = 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:21 sat:19 unsat:2

string analysis: SPC # = 0
NPC constraint # = 3
b = 0 &&
a = 0 &&
symVar != 0
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)numeric PC: constraint # = 3
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:22 sat:20 unsat:2

string analysis: SPC # = 0
NPC constraint # = 3
b != 0 &&
a = 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#10

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10
if ((&& (&& (|| (&& (! (== w3 0 ) ) (!= w4 0 ) ) (&& (&& (|| (== w3 0 ) (&& (! (== w3 0 ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w3==0)&&w4!=0||w3==0||!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3

	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (&& (! (== w3$29 0 ) ) (!= w4$29 0 ) ) (&& (&& (|| (== w3$29 0 ) (&& (! (== w3$29 0 ) ) (! (!= w4$29 0 ) ) ) ) (! (== w2$29 0 ) ) ) (! (== w4$29 0 ) ) ) ) (! (>= w5$29 10 ) ) ) (! (<= w5$29 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(w3$29==0)&&w4$29!=0||w3$29==0||!(w3$29==0)&&!(w4$29!=0)&&!(w2$29==0)&&!(w4$29==0)&&!(w5$29>=10)&&!(w5$29<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Input Table (var->slot)
w2$29 --------- 1
w3$29 --------- 2
w4$29 --------- 3
w5$29 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== w3$29 0 ) ) (!= w4$29 0 ) ) (&& (&& (|| (== w3$29 0 ) (&& (! (== w3$29 0 ) ) (! (!= w4$29 0 ) ) ) ) (! (== w2$29 0 ) ) ) (! (== w4$29 0 ) ) ) ) (! (>= w5$29 10 ) ) ) (! (<= w5$29 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(w3$29==0)&&w4$29!=0||w3$29==0||!(w3$29==0)&&!(w4$29!=0)&&!(w2$29==0)&&!(w4$29==0)&&!(w5$29>=10)&&!(w5$29<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$29 --------- [1]
w3$29 --------- [2]
w4$29 --------- [3]
w5$29 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$29 --------- boolean
w3$29 --------- boolean
w4$29 --------- boolean
w5$29 --------- int
w7$29 --------- int
w8$29 --------- int
w9$29 --------- int
w10$29 --------- int
w11$29 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$29 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$29
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14
if ((&& (&& (|| (!= w4 0 ) (&& (&& (! (!= w4 0 ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w4!=0||!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (!= w4$30 0 ) (&& (&& (! (!= w4$30 0 ) ) (! (== w2$30 0 ) ) ) (! (== w4$30 0 ) ) ) ) (! (>= w5$30 10 ) ) ) (! (<= w5$30 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma w4$30!=0||!(w4$30!=0)&&!(w2$30==0)&&!(w4$30==0)&&!(w5$30>=10)&&!(w5$30<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Input Table (var->slot)
w2$30 --------- 1
w4$30 --------- 3
w5$30 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= w4$30 0 ) (&& (&& (! (!= w4$30 0 ) ) (! (== w2$30 0 ) ) ) (! (== w4$30 0 ) ) ) ) (! (>= w5$30 10 ) ) ) (! (<= w5$30 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma w4$30!=0||!(w4$30!=0)&&!(w2$30==0)&&!(w4$30==0)&&!(w5$30>=10)&&!(w5$30<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$30 --------- [1]
w4$30 --------- [3]
w5$30 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$30 --------- boolean
w3$30 --------- boolean
w4$30 --------- boolean
w5$30 --------- int
w7$30 --------- int
w8$30 --------- int
w9$30 --------- int
w10$30 --------- int
w11$30 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$30 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$30
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

numeric PC: constraint # = 4
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:23 sat:21 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0
numeric PC: constraint # = 4
c = 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:24 sat:22 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
c = 0 &&
b != 0 &&
a = 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#14

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14
if ((&& (&& (|| (!= w4 0 ) (&& (&& (! (!= w4 0 ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w4!=0||!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (!= w4$31 0 ) (&& (&& (! (!= w4$31 0 ) ) (! (== w2$31 0 ) ) ) (! (== w4$31 0 ) ) ) ) (! (>= w5$31 10 ) ) ) (! (<= w5$31 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma w4$31!=0||!(w4$31!=0)&&!(w2$31==0)&&!(w4$31==0)&&!(w5$31>=10)&&!(w5$31<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Input Table (var->slot)
w2$31 --------- 1
w4$31 --------- 3
w5$31 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= w4$31 0 ) (&& (&& (! (!= w4$31 0 ) ) (! (== w2$31 0 ) ) ) (! (== w4$31 0 ) ) ) ) (! (>= w5$31 10 ) ) ) (! (<= w5$31 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma w4$31!=0||!(w4$31!=0)&&!(w2$31==0)&&!(w4$31==0)&&!(w5$31>=10)&&!(w5$31<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$31 --------- [1]
w4$31 --------- [3]
w5$31 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$31 --------- boolean
w3$31 --------- boolean
w4$31 --------- boolean
w5$31 --------- int
w7$31 --------- int
w8$31 --------- int
w9$31 --------- int
w10$31 --------- int
w11$31 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$31 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$31
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18
if ((&& (&& (&& (! (== w2 0 ) ) (! (== w4 0 ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (&& (! (== w2$32 0 ) ) (! (== w4$32 0 ) ) ) (! (>= w5$32 10 ) ) ) (! (<= w5$32 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(w2$32==0)&&!(w4$32==0)&&!(w5$32>=10)&&!(w5$32<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Input Table (var->slot)
w2$32 --------- 1
w4$32 --------- 3
w5$32 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== w2$32 0 ) ) (! (== w4$32 0 ) ) ) (! (>= w5$32 10 ) ) ) (! (<= w5$32 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(w2$32==0)&&!(w4$32==0)&&!(w5$32>=10)&&!(w5$32<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$32 --------- [1]
w4$32 --------- [3]
w5$32 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$32 --------- boolean
w3$32 --------- boolean
w4$32 --------- boolean
w5$32 --------- int
w7$32 --------- int
w8$32 --------- int
w9$32 --------- int
w10$32 --------- int
w11$32 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$32 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$32
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 4
c = 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:25 sat:23 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
c = 0 &&
b != 0 &&
a = 0 &&
symVar != 0
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)numeric PC: constraint # = 5
a != 0 &&
c = 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> false

### PCs: total:26 sat:23 unsat:3

threadTerminated

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14
if ((&& (&& (|| (!= w4 0 ) (&& (&& (! (!= w4 0 ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma w4!=0||!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (!= w4$33 0 ) (&& (&& (! (!= w4$33 0 ) ) (! (== w2$33 0 ) ) ) (! (== w4$33 0 ) ) ) ) (! (>= w5$33 10 ) ) ) (! (<= w5$33 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma w4$33!=0||!(w4$33!=0)&&!(w2$33==0)&&!(w4$33==0)&&!(w5$33>=10)&&!(w5$33<=5) 1 0); 


	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Input Table (var->slot)
w2$33 --------- 1
w4$33 --------- 3
w5$33 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= w4$33 0 ) (&& (&& (! (!= w4$33 0 ) ) (! (== w2$33 0 ) ) ) (! (== w4$33 0 ) ) ) ) (! (>= w5$33 10 ) ) ) (! (<= w5$33 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma w4$33!=0||!(w4$33!=0)&&!(w2$33==0)&&!(w4$33==0)&&!(w5$33>=10)&&!(w5$33<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#14 ---------------

if ((&& (&& (|| (!= c 0 ) (&& (&& (! (!= c 0 ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$33 --------- [1]
w4$33 --------- [3]
w5$33 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$33 --------- boolean
w3$33 --------- boolean
w4$33 --------- boolean
w5$33 --------- int
w7$33 --------- int
w8$33 --------- int
w9$33 --------- int
w10$33 --------- int
w11$33 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$33 := (Gamma c!=0||!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$33
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$34 10 ) ) (! (<= w5$34 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(w5$34>=10)&&!(w5$34<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Input Table (var->slot)
w5$34 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$34 10 ) ) (! (<= w5$34 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(w5$34>=10)&&!(w5$34<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$34 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$34 --------- int
w7$34 --------- int
w8$34 --------- int
w9$34 --------- int
w10$34 --------- int
w11$34 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$34 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$34
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
numeric PC: constraint # = 5
threshold >= 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:27 sat:24 unsat:3

string analysis: SPC # = 0
NPC constraint # = 5
threshold >= 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0
numeric PC: constraint # = 5
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:28 sat:25 unsat:3

string analysis: SPC # = 0
NPC constraint # = 5
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$35 10 ) ) (! (<= w5$35 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(w5$35>=10)&&!(w5$35<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Input Table (var->slot)
w5$35 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$35 10 ) ) (! (<= w5$35 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(w5$35>=10)&&!(w5$35<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int

	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$35 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$35 --------- int
w7$35 --------- int
w8$35 --------- int
w9$35 --------- int
w10$35 --------- int
w11$35 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$35 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$35
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]
	at gov.nasa.jpf.tool.Run.call(Run.java:80)

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
if ((! (<= w5$36 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(w5$36<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Input Table (var->slot)
w5$36 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$36 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(w5$36<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int
Stack output: w11
jkind.JKindException: LustreParseUtil internal parsing error

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
mismatched input 'valhole_12' expecting {';', '[', ']'}
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
valhole_12: inthole;
w10$36 --------- int
w11$36 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$36 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$36 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$36 --------- int
w7$36 --------- int
w8$36 --------- int
w9$36 --------- int
w10$36 --------- int
w11$36 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$36 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$36
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

numeric PC: constraint # = 6
threshold <= 5 &&
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:29 sat:26 unsat:3

string analysis: SPC # = 0
NPC constraint # = 6
threshold <= 5 &&
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0
numeric PC: constraint # = 6
threshold > 5 &&
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:30 sat:27 unsat:3

string analysis: SPC # = 0
NPC constraint # = 6
threshold > 5 &&
threshold < 10 &&
c != 0 &&
b != 0 &&
a = 0 &&
symVar != 0
choiceGeneratorRegistered(class gov.nasa.jpf.symbc.numeric.PCChoiceGenerator) at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$37 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(w5$37<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Input Table (var->slot)
w5$37 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$37 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(w5$37<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
   skip; 
} else {
   skip; 
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
printing Region Output Table (slot->var)


printing WalaVarTypeTable ( var ->type)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
w11$37 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$37 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$37 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$37 --------- int
w7$37 --------- int
w8$37 --------- int
w9$37 --------- int
w10$37 --------- int
w11$37 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$37 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$37
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

threadTerminated

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35
if ((! (<= w5 5 ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (<= w5$38 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(w5$38<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Input Table (var->slot)
w5$38 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= w5$38 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(w5$38<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#35 ---------------

if ((! (<= threshold 5 ) )) {
   skip; 
} else {
   skip; 
}
w11$38 := (Gamma !(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$38 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$38 --------- int
w7$38 --------- int
w8$38 --------- int
w9$38 --------- int
w10$38 --------- int
w11$38 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$38 := (Gamma !(threshold<=5) 1 0); 


Stack output: w11$38
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;

^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#35

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29
if ((&& (! (>= w5 10 ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w5 --------- [4]

printing Region Input Table (var->slot)
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w7 --------- int
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (! (>= w5$39 10 ) ) (! (<= w5$39 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(w5$39>=10)&&!(w5$39<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Input Table (var->slot)
w5$39 --------- 4

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= w5$39 10 ) ) (! (<= w5$39 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(w5$39>=10)&&!(w5$39<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#29 ---------------

if ((&& (! (>= threshold 10 ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w5$39 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w5$39 --------- int
w7$39 --------- int
w8$39 --------- int
w9$39 --------- int
w10$39 --------- int
w11$39 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$39 := (Gamma !(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$39
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
^

	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#29
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#14

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10
if ((&& (&& (|| (&& (! (== w3 0 ) ) (!= w4 0 ) ) (&& (&& (|| (== w3 0 ) (&& (! (== w3 0 ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w3==0)&&w4!=0||w3==0||!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w3 --------- [2]
@w4 --------- [3]
@w2 --------- [1]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w3 --------- 2
@w4 --------- 3
@w2 --------- 1
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (&& (! (== w3$40 0 ) ) (!= w4$40 0 ) ) (&& (&& (|| (== w3$40 0 ) (&& (! (== w3$40 0 ) ) (! (!= w4$40 0 ) ) ) ) (! (== w2$40 0 ) ) ) (! (== w4$40 0 ) ) ) ) (! (>= w5$40 10 ) ) ) (! (<= w5$40 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(w3$40==0)&&w4$40!=0||w3$40==0||!(w3$40==0)&&!(w4$40!=0)&&!(w2$40==0)&&!(w4$40==0)&&!(w5$40>=10)&&!(w5$40<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Input Table (var->slot)
w2$40 --------- 1
w3$40 --------- 2
w4$40 --------- 3
w5$40 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== w3$40 0 ) ) (!= w4$40 0 ) ) (&& (&& (|| (== w3$40 0 ) (&& (! (== w3$40 0 ) ) (! (!= w4$40 0 ) ) ) ) (! (== w2$40 0 ) ) ) (! (== w4$40 0 ) ) ) ) (! (>= w5$40 10 ) ) ) (! (<= w5$40 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(w3$40==0)&&w4$40!=0||w3$40==0||!(w3$40==0)&&!(w4$40!=0)&&!(w2$40==0)&&!(w4$40==0)&&!(w5$40>=10)&&!(w5$40<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#10 ---------------

if ((&& (&& (|| (&& (! (== b 0 ) ) (!= c 0 ) ) (&& (&& (|| (== b 0 ) (&& (! (== b 0 ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$40 --------- [1]
w3$40 --------- [2]
w4$40 --------- [3]
w5$40 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$40 --------- boolean
w3$40 --------- boolean
w4$40 --------- boolean
w5$40 --------- int
w7$40 --------- int
w8$40 --------- int
w9$40 --------- int
w10$40 --------- int
w11$40 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$40 := (Gamma !(b==0)&&c!=0||b==0||!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$40
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18
if ((&& (&& (&& (! (== w2 0 ) ) (! (== w4 0 ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 



Region Stack Slot Map (var -> slot)
@w2 --------- [1]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w2 --------- 1
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w2 --------- boolean
@w7 --------- int
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int
@w8 --------- int
@w9 --------- int
@w11 --------- int
@w10 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (&& (! (== w2$41 0 ) ) (! (== w4$41 0 ) ) ) (! (>= w5$41 10 ) ) ) (! (<= w5$41 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(w2$41==0)&&!(w4$41==0)&&!(w5$41>=10)&&!(w5$41<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Input Table (var->slot)
w2$41 --------- 1
w4$41 --------- 3
w5$41 --------- 4

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int

printing Region Output Table (slot->var)
Stack output: w11
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== w2$41 0 ) ) (! (== w4$41 0 ) ) ) (! (>= w5$41 10 ) ) ) (! (<= w5$41 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(w2$41==0)&&!(w4$41==0)&&!(w5$41>=10)&&!(w5$41<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int
Stack output: w11

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


--------------- ARRAY TRANSFORMATION ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V#18 ---------------

if ((&& (&& (&& (! (== a 0 ) ) (! (== c 0 ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


printing stack-slot table (var->slot)
w2$41 --------- [1]
w4$41 --------- [3]
w5$41 --------- [4]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w2$41 --------- boolean
w3$41 --------- boolean
w4$41 --------- boolean
w5$41 --------- int
w7$41 --------- int
w8$41 --------- int
w9$41 --------- int
w10$41 --------- int
w11$41 --------- int
Stack output: w11

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$41 := (Gamma !(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 


Stack output: w11$41
Repair does NOT include initial values
jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^


	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
numeric PC: constraint # = 3
b = 0 &&
a = 0 &&
symVar != 0 -> true

### PCs: total:31 sat:28 unsat:3

string analysis: SPC # = 0
NPC constraint # = 3
b = 0 &&
a = 0 &&
symVar != 0
numeric PC: constraint # = 4
a != 0 &&
b = 0 &&
a = 0 &&
symVar != 0 -> false

### PCs: total:32 sat:28 unsat:4

threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#10
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V]#2

---------- STARTING Transformations for conditional region: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8
if ((! (== w7 0 ) )) {
   invokevirtual < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V > 1,2,3,4,5 @17 exception:10
} else {
   skip; 
}



Region Stack Slot Map (var -> slot)
@w7 --------- [6]
@w1 --------- [0]
@w2 --------- [1]
@w3 --------- [2]
@w4 --------- [3]
@w5 --------- [4]

printing Region Input Table (var->slot)
@w7 --------- 6
@w1 --------- 0
@w2 --------- 1
@w3 --------- 2
@w4 --------- 3
@w5 --------- 4

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
@w6 --------- boolean
@w1 --------- DiscoveryExamples.DiscoveryVoting
@w7 --------- boolean
@w2 --------- boolean
@w3 --------- boolean
@w4 --------- boolean
@w5 --------- int

--------------- UNIQUENESS TRANSFORMATION ---------------
if ((! (== w7$42 0 ) )) {
   
[] = invoke < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V >[w1$42, w2$42, w3$42, w4$42, w5$42]
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Input Table (var->slot)
w1$42 --------- 0
w2$42 --------- 1
w3$42 --------- 2
w4$42 --------- 3
w5$42 --------- 4
w7$42 --------- 6

printing WalaVarTypeTable ( var ->type)
w1$42 --------- DiscoveryExamples.DiscoveryVoting
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean

printing Region Output Table (slot->var)
Stack output: null
========================================= RUNNING FIXED POINT ITERATION # 1=========================================

********** High Order Region Discovered for region: DiscoveryExamples.DiscoveryVoting.vote2(ZZZI)V


---------- STARTING Inlining Transformation for region: ---------------
if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 

 put(w1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11

 return w-1



Region prior to removeEarlyReturns: if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 
putfield 1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> > = 11
return


Region after removeEarlyReturns: if ((&& (&& (|| (|| (&& (! (== w2 0 ) ) (!= w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (!= w4 0 ) ) ) (&& (&& (|| (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (== w3 0 ) ) (&& (&& (|| (== w2 0 ) (&& (! (== w2 0 ) ) (! (!= w3 0 ) ) ) ) (! (== w3 0 ) ) ) (! (!= w4 0 ) ) ) ) (! (== w2 0 ) ) ) (! (== w4 0 ) ) ) ) (! (>= w5 10 ) ) ) (! (<= w5 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11 := (Gamma !(w2==0)&&w3!=0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&w4!=0||w2==0||!(w2==0)&&!(w3!=0)&&w3==0||w2==0||!(w2==0)&&!(w3!=0)&&!(w3==0)&&!(w4!=0)&&!(w2==0)&&!(w4==0)&&!(w5>=10)&&!(w5<=5) 1 0); 

 put(w1.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11
skip; 
~earlyReturnResult := w-1; 


--------------- UNIQUENESS TRANSFORMATION ---------------
if ((&& (&& (|| (|| (&& (! (== w2$43 0 ) ) (!= w3$43 0 ) ) (&& (&& (|| (== w2$43 0 ) (&& (! (== w2$43 0 ) ) (! (!= w3$43 0 ) ) ) ) (! (== w3$43 0 ) ) ) (!= w4$43 0 ) ) ) (&& (&& (|| (&& (|| (== w2$43 0 ) (&& (! (== w2$43 0 ) ) (! (!= w3$43 0 ) ) ) ) (== w3$43 0 ) ) (&& (&& (|| (== w2$43 0 ) (&& (! (== w2$43 0 ) ) (! (!= w3$43 0 ) ) ) ) (! (== w3$43 0 ) ) ) (! (!= w4$43 0 ) ) ) ) (! (== w2$43 0 ) ) ) (! (== w4$43 0 ) ) ) ) (! (>= w5$43 10 ) ) ) (! (<= w5$43 5 ) ) )) {
   skip; 
} else {
   skip; 
}
w11$43 := (Gamma !(w2$43==0)&&w3$43!=0||w2$43==0||!(w2$43==0)&&!(w3$43!=0)&&!(w3$43==0)&&w4$43!=0||w2$43==0||!(w2$43==0)&&!(w3$43!=0)&&w3$43==0||w2$43==0||!(w2$43==0)&&!(w3$43!=0)&&!(w3$43==0)&&!(w4$43!=0)&&!(w2$43==0)&&!(w4$43==0)&&!(w5$43>=10)&&!(w5$43<=5) 1 0); 

 put(w1$43.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11$43
skip; 
~earlyReturnResult$43 := w-1$43; 


printing stack-slot table (var->param)
w1$43 --------- [0]
w2$43 --------- [1]
w3$43 --------- [2]
w4$43 --------- [3]
w5$43 --------- [4]

printing Region Input Table (var->param)
w1$43 --------- 0
w2$43 --------- 1
w3$43 --------- 2
w4$43 --------- 3
w5$43 --------- 4

printing WalaVarTypeTable ( var ->type)
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int

printing Region Output Table (return->var)
Stack output: null

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== w7$42 0 ) )) {
   
[] = invoke < Application, LDiscoveryExamples/DiscoveryVoting, vote2(ZZZI)V >[w1$42, w2$42, w3$42, w4$42, w5$42]
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   
 put(347.< Application, LDiscoveryExamples/DiscoveryVoting, out, <Primordial,Z> >) = w11$43
   skip; 
   skip; 
} else {
   skip; 
}


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int
Stack output: null

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING FIXED POINT ITERATION # 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int
Stack output: null

--------------- FIELD REFERENCE TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


--------------- ARRAY TRANSFORMATION ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 

Array Outputs Table

========================================= RUNNING HIGH-ORDER ONE EXTRA TIME AFTER FIXED POINT ITERATION# 2=========================================

--------------- SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int

--------------- AFTER SUBSTITUTION TRANSFORMATION for: DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V#8 ---------------

if ((! (== symVar 0 ) )) {
   if ((&& (&& (|| (|| (&& (! (== a 0 ) ) (!= b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (!= c 0 ) ) ) (&& (&& (|| (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (== b 0 ) ) (&& (&& (|| (== a 0 ) (&& (! (== a 0 ) ) (! (!= b 0 ) ) ) ) (! (== b 0 ) ) ) (! (!= c 0 ) ) ) ) (! (== a 0 ) ) ) (! (== c 0 ) ) ) ) (! (>= threshold 10 ) ) ) (! (<= threshold 5 ) ) )) {
      skip; 
   } else {
      skip; 
   }
   w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
   r347.out.1.1 := w11$43; 
   skip; 
   skip; 
} else {
   skip; 
}
r347.out.1.3 := (Gamma !(symVar==0) r347.out.1.1 out); 


printing stack-slot table (var->slot)
w1$42 --------- [0]
w2$42 --------- [1]
w3$42 --------- [2]
w4$42 --------- [3]
w5$42 --------- [4]
w7$42 --------- [6]

printing Region Output Table (slot->var)

printing WalaVarTypeTable ( var ->type)
w1$42 --------- LDiscoveryExamples/DiscoveryVoting;
w2$42 --------- boolean
w3$42 --------- boolean
w4$42 --------- boolean
w5$42 --------- int
w6$42 --------- boolean
w7$42 --------- boolean
w1$43 --------- DiscoveryExamples.DiscoveryVoting
w2$43 --------- boolean
w3$43 --------- boolean
w4$43 --------- boolean
w5$43 --------- int
w7$43 --------- int
w8$43 --------- int
w9$43 --------- int
w10$43 --------- int
w11$43 --------- int
Stack output: null

--------------- LINEARIZATION TRANSFORMATION ---------------
skip; 
skip; 
w11$43 := (Gamma !(a==0)&&b!=0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&c!=0||a==0||!(a==0)&&!(b!=0)&&b==0||a==0||!(a==0)&&!(b!=0)&&!(b==0)&&!(c!=0)&&!(a==0)&&!(c==0)&&!(threshold>=10)&&!(threshold<=5) 1 0); 
r347.out.1.1.43 := w11$43; 
skip; 
skip; 
skip; 
r347.out.1.3.43 := (Gamma !(symVar==0) r347.out.1.1.43 out); 


Stack output: null
Repair does NOT include initial values
!!!!!!!! Aborting Veritesting !!!!!!!!!!!! 
LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^

jkind.JKindException: LustreParseUtil internal parsing error
mismatched input 'valhole_12' expecting {';', '[', ']'}
valhole_12: inthole;
^
	at jkind.lustre.parsing.LustreParseUtil.program(LustreParseUtil.java:78)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.repairSpec(DiscoverContract.java:112)
	at gov.nasa.jpf.symbc.veritesting.RangerDiscovery.DiscoverContract.discoverLusterContract(DiscoverContract.java:73)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritesting(VeritestingListener.java:629)
	at gov.nasa.jpf.symbc.VeritestingListener.runVeritestingWrapper(VeritestingListener.java:397)
	at gov.nasa.jpf.symbc.VeritestingListener.executeInstruction(VeritestingListener.java:336)
	at gov.nasa.jpf.vm.VM.notifyExecuteInstruction(VM.java:793)
	at gov.nasa.jpf.vm.ThreadInfo.executeInstruction(ThreadInfo.java:1904)
	at gov.nasa.jpf.vm.ThreadInfo.executeTransition(ThreadInfo.java:1859)
	at gov.nasa.jpf.vm.SystemState.executeNextTransition(SystemState.java:765)
	at gov.nasa.jpf.vm.VM.forward(VM.java:1722)
	at gov.nasa.jpf.search.Search.forward(Search.java:579)
	at gov.nasa.jpf.search.DFSearch.search(DFSearch.java:79)
	at gov.nasa.jpf.JPF.run(JPF.java:613)
	at gov.nasa.jpf.JPF.start(JPF.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at gov.nasa.jpf.tool.Run.call(Run.java:80)
	at gov.nasa.jpf.tool.RunJPF.main(RunJPF.java:116)
threadTerminated
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.makeStep(ZZZIZZ)V]#8
choiceGeneratorProcessed: at MethodInfo[DiscoveryExamples.DiscoveryVoting.main([Ljava/lang/String;)V]#15
choiceGeneratorProcessed: at MethodInfo[java.lang.Boolean.[<clinit>]]#0

====================================================== VeritestingListener report:

/************************ Printing Exception Statistics *****************
Static Analysis exceptions count = 0
Instantiation Time exceptions count = 0
Unknown phases exception count = 0


/************************ Printing Time Decomposition Statistics *****************
static analysis time = 11514 msec
Veritesting Dyn Time = 2832 msec
Veritesting fix-pint Time = 2 msec

/************************ Printing Solver Statistics *****************
Total Solver Queries Count = 0
Total Solver Time = 197 msec
Total Solver Parse Time = 65 msec
Region Summary Parse Time = 0 msec
Total Solver Clean up Time = 0 msec
PCSatSolverCount = 0
PCSatSolverTime = 0 msec
Constant Propagation Time for PC sat. checks = 0
Array SPF Case count = 0
If-removed count = 0

/************************ Printing Region Statistics *****************
Number of Distinct Veritested Regions = 0
Number of Distinct Un-Veritested Symbolic Regions = 0
Number of Distinct Failed Regions for Field Reference = 0
Number of Distinct Failed Regions for SPFCases = 0
Number of Distinct Failed Regions for missing method summaries = 0
Number of Distinct Failed Regions for Other Reasons = 0
Number of High Order Regions Used = 0

/************************ Printing Instantiation Statistics *****************
Number of successful instantiations = 0
Total Number of unsuccessful instantiations = 0
Number of failed instantiations due to Field Reference = 0
Number of failed instantiations due to SPFCases = 0
Number of failed instantiations due to missing method summaries = 0
Number of failed instantiations due to Other Reasons = 0


Number of Veritested Regions Instances = 0
Printing keys of regions that were instantiated at least once
Finished printing keys of regions that were instantiated at least once

Metrics Vector:
14346,11514,2832,13,0,197,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,431,79,1,2,2.1999999999999997,0,0,0
Contract is NOT repaired
====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:14
states:             new=26,visited=0,backtracked=26,end=13
search:             maxDepth=8,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=13
heap:               new=347,released=132,maxLive=345,gcCycles=15
instructions:       3269
max memory:         538MB
loaded code:        classes=60,methods=1284

====================================================== search finished: 12/16/19 4:09 PM
