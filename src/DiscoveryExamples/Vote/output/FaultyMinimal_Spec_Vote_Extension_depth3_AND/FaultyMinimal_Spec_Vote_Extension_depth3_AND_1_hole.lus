node T_node(
  a : bool;
  b : bool;
  c : bool;
  threshold : int;
  out : bool;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  valhole_4_4 : int;
  valhole_5_5 : int;
  valhole_6_6 : int;
  valhole_7_7 : int;
  valhole_8_8 : int;
  valhole_9_9 : int;
  valhole_10_10 : int;
  valhole_11_11 : int;
  level_0_1_0_hole_12 : int;
  level_0_1_1_hole_13 : int;
  level_1_1_0_hole_14 : int;
  level_1_1_1_hole_15 : int;
  level_2_0_hole_16 : int;
  level_2_1_hole_17 : int;
  level_3_hole_18 : int
) returns (
  p1 : bool
);
let
  p1 = (true -> (discover_binary_Bool_3_Int_0_0(a, b, c, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, valhole_4_4, valhole_5_5, valhole_6_6, valhole_7_7, valhole_8_8, valhole_9_9, valhole_10_10, valhole_11_11, level_0_1_0_hole_12, level_0_1_1_hole_13, level_1_1_0_hole_14, level_1_1_1_hole_15, level_2_0_hole_16, level_2_1_hole_17, level_3_hole_18) xor out));

tel;

node discover_binary_Bool_3_Int_0_0(
  a0 : bool;
  a1 : bool;
  a2 : bool;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  valhole_4_4 : int;
  valhole_5_5 : int;
  valhole_6_6 : int;
  valhole_7_7 : int;
  valhole_8_8 : int;
  valhole_9_9 : int;
  valhole_10_10 : int;
  valhole_11_11 : int;
  level_0_1_0_hole_12 : int;
  level_0_1_1_hole_13 : int;
  level_1_1_0_hole_14 : int;
  level_1_1_1_hole_15 : int;
  level_2_0_hole_16 : int;
  level_2_1_hole_17 : int;
  level_3_hole_18 : int
) returns (
  out : bool
);
var
  bExprlevel_0_0_0 : bool;
  bExprlevel_0_0_1 : bool;
  bExprlevel_0_0_2 : bool;
  bExprlevel_0_0_3 : bool;
  bExprlevel_0_0_4 : bool;
  bExprlevel_0_0_5 : bool;
  bExprlevel_0_1_0 : bool;
  bExprlevel_0_1_1 : bool;
  bExprlevel_0_2_0 : bool;
  bExprlevel_1_0_0 : bool;
  bExprlevel_1_0_1 : bool;
  bExprlevel_1_0_2 : bool;
  bExprlevel_1_0_3 : bool;
  bExprlevel_1_0_4 : bool;
  bExprlevel_1_0_5 : bool;
  bExprlevel_1_1_0 : bool;
  bExprlevel_1_1_1 : bool;
  bExprlevel_1_2_0 : bool;
  bExprlevel_1_3 : bool;
let
  bExprlevel_0_0_0 = (if (valhole_0_0 = 1) then false else (if (valhole_0_0 = 2) then true else (if (valhole_0_0 = 3) then a0 else (if (valhole_0_0 = 4) then a1 else a2))));

  bExprlevel_0_0_1 = (if (valhole_1_1 = 1) then false else (if (valhole_1_1 = 2) then true else (if (valhole_1_1 = 3) then a0 else (if (valhole_1_1 = 4) then a1 else a2))));

  bExprlevel_0_0_2 = (if (valhole_2_2 = 1) then false else (if (valhole_2_2 = 2) then true else (if (valhole_2_2 = 3) then a0 else (if (valhole_2_2 = 4) then a1 else a2))));

  bExprlevel_0_1_0 = (if (level_0_1_0_hole_12 = 0) then bExprlevel_0_0_0 else (if (level_0_1_0_hole_12 = 3) then bExprlevel_0_0_1 else (if (level_0_1_0_hole_12 = 4) then bExprlevel_0_0_2 else (if (level_0_1_0_hole_12 = 5) then (not bExprlevel_0_0_0) else (if (level_0_1_0_hole_12 = 6) then (not bExprlevel_0_0_1) else (if (level_0_1_0_hole_12 = 7) then (not bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 8) then (bExprlevel_0_0_0 and bExprlevel_0_0_1) else (if (level_0_1_0_hole_12 = 9) then (bExprlevel_0_0_0 and bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 10) then (bExprlevel_0_0_1 and bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 11) then (bExprlevel_0_0_0 or bExprlevel_0_0_1) else (if (level_0_1_0_hole_12 = 12) then (bExprlevel_0_0_0 or bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 13) then (bExprlevel_0_0_1 or bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 14) then (bExprlevel_0_0_0 xor bExprlevel_0_0_1) else (if (level_0_1_0_hole_12 = 15) then (bExprlevel_0_0_0 xor bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 16) then (bExprlevel_0_0_1 xor bExprlevel_0_0_2) else (if (level_0_1_0_hole_12 = 17) then (bExprlevel_0_0_0 => bExprlevel_0_0_1) else (if (level_0_1_0_hole_12 = 18) then (bExprlevel_0_0_0 => bExprlevel_0_0_2) else (bExprlevel_0_0_1 => bExprlevel_0_0_2))))))))))))))))));

  bExprlevel_0_0_3 = (if (valhole_3_3 = 1) then false else (if (valhole_3_3 = 2) then true else (if (valhole_3_3 = 3) then a0 else (if (valhole_3_3 = 4) then a1 else a2))));

  bExprlevel_0_0_4 = (if (valhole_4_4 = 1) then false else (if (valhole_4_4 = 2) then true else (if (valhole_4_4 = 3) then a0 else (if (valhole_4_4 = 4) then a1 else a2))));

  bExprlevel_0_0_5 = (if (valhole_5_5 = 1) then false else (if (valhole_5_5 = 2) then true else (if (valhole_5_5 = 3) then a0 else (if (valhole_5_5 = 4) then a1 else a2))));

  bExprlevel_0_1_1 = (if (level_0_1_1_hole_13 = 0) then bExprlevel_0_0_3 else (if (level_0_1_1_hole_13 = 3) then bExprlevel_0_0_4 else (if (level_0_1_1_hole_13 = 4) then bExprlevel_0_0_5 else (if (level_0_1_1_hole_13 = 5) then (not bExprlevel_0_0_3) else (if (level_0_1_1_hole_13 = 6) then (not bExprlevel_0_0_4) else (if (level_0_1_1_hole_13 = 7) then (not bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 8) then (bExprlevel_0_0_3 and bExprlevel_0_0_4) else (if (level_0_1_1_hole_13 = 9) then (bExprlevel_0_0_3 and bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 10) then (bExprlevel_0_0_4 and bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 11) then (bExprlevel_0_0_3 or bExprlevel_0_0_4) else (if (level_0_1_1_hole_13 = 12) then (bExprlevel_0_0_3 or bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 13) then (bExprlevel_0_0_4 or bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 14) then (bExprlevel_0_0_3 xor bExprlevel_0_0_4) else (if (level_0_1_1_hole_13 = 15) then (bExprlevel_0_0_3 xor bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 16) then (bExprlevel_0_0_4 xor bExprlevel_0_0_5) else (if (level_0_1_1_hole_13 = 17) then (bExprlevel_0_0_3 => bExprlevel_0_0_4) else (if (level_0_1_1_hole_13 = 18) then (bExprlevel_0_0_3 => bExprlevel_0_0_5) else (bExprlevel_0_0_4 => bExprlevel_0_0_5))))))))))))))))));

  bExprlevel_0_2_0 = (if (level_2_0_hole_16 = 0) then bExprlevel_0_1_0 else (if (level_2_0_hole_16 = 1) then bExprlevel_0_1_1 else (if (level_2_0_hole_16 = 2) then (not bExprlevel_0_1_0) else (if (level_2_0_hole_16 = 3) then (not bExprlevel_0_1_1) else (if (level_2_0_hole_16 = 4) then (bExprlevel_0_1_0 and bExprlevel_0_1_1) else (if (level_2_0_hole_16 = 5) then (bExprlevel_0_1_0 or bExprlevel_0_1_1) else (if (level_2_0_hole_16 = 6) then (bExprlevel_0_1_0 xor bExprlevel_0_1_1) else (bExprlevel_0_1_0 => bExprlevel_0_1_1))))))));

  bExprlevel_1_0_0 = (if (valhole_6_6 = 1) then false else (if (valhole_6_6 = 2) then true else (if (valhole_6_6 = 3) then a0 else (if (valhole_6_6 = 4) then a1 else a2))));

  bExprlevel_1_0_1 = (if (valhole_7_7 = 1) then false else (if (valhole_7_7 = 2) then true else (if (valhole_7_7 = 3) then a0 else (if (valhole_7_7 = 4) then a1 else a2))));

  bExprlevel_1_0_2 = (if (valhole_8_8 = 1) then false else (if (valhole_8_8 = 2) then true else (if (valhole_8_8 = 3) then a0 else (if (valhole_8_8 = 4) then a1 else a2))));

  bExprlevel_1_1_0 = (if (level_1_1_0_hole_14 = 0) then bExprlevel_1_0_0 else (if (level_1_1_0_hole_14 = 3) then bExprlevel_1_0_1 else (if (level_1_1_0_hole_14 = 4) then bExprlevel_1_0_2 else (if (level_1_1_0_hole_14 = 5) then (not bExprlevel_1_0_0) else (if (level_1_1_0_hole_14 = 6) then (not bExprlevel_1_0_1) else (if (level_1_1_0_hole_14 = 7) then (not bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 8) then (bExprlevel_1_0_0 and bExprlevel_1_0_1) else (if (level_1_1_0_hole_14 = 9) then (bExprlevel_1_0_0 and bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 10) then (bExprlevel_1_0_1 and bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 11) then (bExprlevel_1_0_0 or bExprlevel_1_0_1) else (if (level_1_1_0_hole_14 = 12) then (bExprlevel_1_0_0 or bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 13) then (bExprlevel_1_0_1 or bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 14) then (bExprlevel_1_0_0 xor bExprlevel_1_0_1) else (if (level_1_1_0_hole_14 = 15) then (bExprlevel_1_0_0 xor bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 16) then (bExprlevel_1_0_1 xor bExprlevel_1_0_2) else (if (level_1_1_0_hole_14 = 17) then (bExprlevel_1_0_0 => bExprlevel_1_0_1) else (if (level_1_1_0_hole_14 = 18) then (bExprlevel_1_0_0 => bExprlevel_1_0_2) else (bExprlevel_1_0_1 => bExprlevel_1_0_2))))))))))))))))));

  bExprlevel_1_0_3 = (if (valhole_9_9 = 1) then false else (if (valhole_9_9 = 2) then true else (if (valhole_9_9 = 3) then a0 else (if (valhole_9_9 = 4) then a1 else a2))));

  bExprlevel_1_0_4 = (if (valhole_10_10 = 1) then false else (if (valhole_10_10 = 2) then true else (if (valhole_10_10 = 3) then a0 else (if (valhole_10_10 = 4) then a1 else a2))));

  bExprlevel_1_0_5 = (if (valhole_11_11 = 1) then false else (if (valhole_11_11 = 2) then true else (if (valhole_11_11 = 3) then a0 else (if (valhole_11_11 = 4) then a1 else a2))));

  bExprlevel_1_1_1 = (if (level_1_1_1_hole_15 = 0) then bExprlevel_1_0_3 else (if (level_1_1_1_hole_15 = 3) then bExprlevel_1_0_4 else (if (level_1_1_1_hole_15 = 4) then bExprlevel_1_0_5 else (if (level_1_1_1_hole_15 = 5) then (not bExprlevel_1_0_3) else (if (level_1_1_1_hole_15 = 6) then (not bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 7) then (not bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 8) then (bExprlevel_1_0_3 and bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 9) then (bExprlevel_1_0_3 and bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 10) then (bExprlevel_1_0_4 and bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 11) then (bExprlevel_1_0_3 or bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 12) then (bExprlevel_1_0_3 or bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 13) then (bExprlevel_1_0_4 or bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 14) then (bExprlevel_1_0_3 xor bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 15) then (bExprlevel_1_0_3 xor bExprlevel_1_0_5) else (if (level_1_1_1_hole_15 = 16) then (bExprlevel_1_0_4 xor bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 17) then (bExprlevel_1_0_3 => bExprlevel_1_0_4) else (if (level_1_1_1_hole_15 = 18) then (bExprlevel_1_0_3 => bExprlevel_1_0_5) else (bExprlevel_1_0_4 => bExprlevel_1_0_4))))))))))))))))));

  bExprlevel_1_2_0 = (if (level_2_1_hole_17 = 0) then bExprlevel_1_1_0 else (if (level_2_1_hole_17 = 1) then bExprlevel_1_1_1 else (if (level_2_1_hole_17 = 2) then (not bExprlevel_1_1_0) else (if (level_2_1_hole_17 = 3) then (not bExprlevel_1_1_1) else (if (level_2_1_hole_17 = 4) then (bExprlevel_1_1_0 and bExprlevel_1_1_1) else (if (level_2_1_hole_17 = 5) then (bExprlevel_1_1_0 or bExprlevel_1_1_1) else (if (level_2_1_hole_17 = 6) then (bExprlevel_1_1_0 xor bExprlevel_1_1_1) else (bExprlevel_1_1_0 => bExprlevel_1_1_1))))))));

  bExprlevel_1_3 = (if (level_3_hole_18 = 0) then bExprlevel_0_2_0 else (if (level_3_hole_18 = 1) then bExprlevel_1_2_0 else (if (level_3_hole_18 = 2) then (not bExprlevel_0_2_0) else (if (level_3_hole_18 = 3) then (not bExprlevel_1_2_0) else (if (level_3_hole_18 = 4) then (bExprlevel_0_2_0 and bExprlevel_1_2_0) else (if (level_3_hole_18 = 5) then (bExprlevel_0_2_0 or bExprlevel_1_2_0) else (if (level_3_hole_18 = 6) then (bExprlevel_0_2_0 xor bExprlevel_1_2_0) else (bExprlevel_0_2_0 => bExprlevel_1_2_0))))))));

  out = bExprlevel_1_3;

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  a : bool;
  b : bool;
  c : bool;
  threshold : int;
  out : bool;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  valhole_4_4 : int;
  valhole_5_5 : int;
  valhole_6_6 : int;
  valhole_7_7 : int;
  valhole_8_8 : int;
  valhole_9_9 : int;
  valhole_10_10 : int;
  valhole_11_11 : int;
  level_0_1_0_hole_12 : int;
  level_0_1_1_hole_13 : int;
  level_1_1_0_hole_14 : int;
  level_1_1_1_hole_15 : int;
  level_2_0_hole_16 : int;
  level_2_1_hole_17 : int;
  level_3_hole_18 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(a, b, c, threshold, out, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, valhole_4_4, valhole_5_5, valhole_6_6, valhole_7_7, valhole_8_8, valhole_9_9, valhole_10_10, valhole_11_11, level_0_1_0_hole_12, level_0_1_1_hole_13, level_1_1_0_hole_14, level_1_1_1_hole_15, level_2_0_hole_16, level_2_1_hole_17, level_3_hole_18) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  valhole_4_4 : int;
  valhole_5_5 : int;
  valhole_6_6 : int;
  valhole_7_7 : int;
  valhole_8_8 : int;
  valhole_9_9 : int;
  valhole_10_10 : int;
  valhole_11_11 : int;
  level_0_1_0_hole_12 : int;
  level_0_1_1_hole_13 : int;
  level_1_1_0_hole_14 : int;
  level_1_1_1_hole_15 : int;
  level_2_0_hole_16 : int;
  level_2_1_hole_17 : int;
  level_3_hole_18 : int
) returns (
  fail : bool
);
var
  ok_0 : bool;
  ok_1 : bool;
  a0 : bool;
  b0 : bool;
  c0 : bool;
  threshold0 : int;
  out_00 : bool;
  a1 : bool;
  b1 : bool;
  c1 : bool;
  threshold1 : int;
  out_01 : bool;
let
  --%MAIN;
  a0 = (true -> (pre false));

  b0 = (false -> (pre true));

  c0 = (true -> (pre false));

  threshold0 = (10 -> (pre 6));

  out_00 = (false -> (pre false));

  a1 = (true -> (pre false));

  b1 = (false -> (pre false));

  c1 = (true -> (pre true));

  threshold1 = (0 -> (pre 6));

  out_01 = (false -> (pre false));

  ok_0 = Check_spec(a0, b0, c0, threshold0, out_00, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, valhole_4_4, valhole_5_5, valhole_6_6, valhole_7_7, valhole_8_8, valhole_9_9, valhole_10_10, valhole_11_11, level_0_1_0_hole_12, level_0_1_1_hole_13, level_1_1_0_hole_14, level_1_1_1_hole_15, level_2_0_hole_16, level_2_1_hole_17, level_3_hole_18, 1);

  ok_1 = Check_spec(a1, b1, c1, threshold1, out_01, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, valhole_4_4, valhole_5_5, valhole_6_6, valhole_7_7, valhole_8_8, valhole_9_9, valhole_10_10, valhole_11_11, level_0_1_0_hole_12, level_0_1_1_hole_13, level_1_1_0_hole_14, level_1_1_1_hole_15, level_2_0_hole_16, level_2_1_hole_17, level_3_hole_18, 1);

  fail = (not (ok_0 and ok_1));

  assert (true -> (valhole_0_0 = (pre valhole_0_0)));

  assert (true -> (valhole_1_1 = (pre valhole_1_1)));

  assert (true -> (valhole_2_2 = (pre valhole_2_2)));

  assert (true -> (valhole_3_3 = (pre valhole_3_3)));

  assert (true -> (valhole_4_4 = (pre valhole_4_4)));

  assert (true -> (valhole_5_5 = (pre valhole_5_5)));

  assert (true -> (valhole_6_6 = (pre valhole_6_6)));

  assert (true -> (valhole_7_7 = (pre valhole_7_7)));

  assert (true -> (valhole_8_8 = (pre valhole_8_8)));

  assert (true -> (valhole_9_9 = (pre valhole_9_9)));

  assert (true -> (valhole_10_10 = (pre valhole_10_10)));

  assert (true -> (valhole_11_11 = (pre valhole_11_11)));

  assert (true -> (level_0_1_0_hole_12 = (pre level_0_1_0_hole_12)));

  assert (true -> (level_0_1_1_hole_13 = (pre level_0_1_1_hole_13)));

  assert (true -> (level_1_1_0_hole_14 = (pre level_1_1_0_hole_14)));

  assert (true -> (level_1_1_1_hole_15 = (pre level_1_1_1_hole_15)));

  assert (true -> (level_2_0_hole_16 = (pre level_2_0_hole_16)));

  assert (true -> (level_2_1_hole_17 = (pre level_2_1_hole_17)));

  assert (true -> (level_3_hole_18 = (pre level_3_hole_18)));

  --%PROPERTY fail;

tel;
