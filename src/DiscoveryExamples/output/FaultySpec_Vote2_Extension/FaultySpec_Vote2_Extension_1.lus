node T_node(
  a : int;
  b : int;
  c : int;
  threshold : int;
  out : bool
) returns (
  p1 : bool
);
let
  p1 = (true -> (out => ((((((a > 2) and (b < (a + 40))) or ((b > 10) and (c > (b + 10)))) or ((a > 0) and (c > 0))) and (threshold < (c - -38))) and (threshold > ((b + c) + -20)))));

  --%PROPERTY p1;

tel;

node R_node(
  a : int;
  b : int;
  c : int;
  threshold : int;
  out_bool : bool
) returns (
  r347_out_1_18_2_bool : bool
);
var
  r347_out_1_1_2 : int;
  w10_2 : int;
  w11_2 : int;
  w13_2 : int;
  w14_2 : int;
  w16_2 : int;
  r347_out_2_2_2 : int;
  r347_out_2_3_2 : int;
  r347_out_2_4_2 : int;
  r347_out_2_5_2 : int;
  r347_out_2_6_2 : int;
  w18_2 : int;
  w19_2 : int;
  w20_2 : int;
  w21_2 : int;
  w22_2 : int;
  r347_out_3_7_2 : int;
  r347_out_3_8_2 : int;
  r347_out_3_9_2 : int;
  r347_out_3_10_2 : int;
  r347_out_3_11_2 : int;
  w23_2 : int;
  w24_2 : int;
  w25_2 : int;
  w26_2 : int;
  r347_out_4_12_2 : int;
  r347_out_4_13_2 : int;
  r347_out_4_14_2 : int;
  r347_out_4_15_2 : int;
  r347_out_4_16_2 : int;
  r347_out_1_18_2 : int;
  symVar : int;
  out : int;
let
  r347_out_1_1_2 = 0;

  w10_2 = (a + 40);

  w11_2 = (a + b);

  w13_2 = (w11_2 + 10);

  w14_2 = (b + c);

  w16_2 = (w14_2 - 5);

  r347_out_2_2_2 = 1;

  r347_out_2_3_2 = (if (not (threshold <= w16_2)) then r347_out_2_2_2 else r347_out_1_1_2);

  r347_out_2_4_2 = (if (not (threshold >= w13_2)) then r347_out_2_3_2 else r347_out_1_1_2);

  r347_out_2_5_2 = (if (not (b >= w10_2)) then r347_out_2_4_2 else r347_out_1_1_2);

  r347_out_2_6_2 = (if (not (a <= 2)) then r347_out_2_5_2 else r347_out_1_1_2);

  w18_2 = (b + 10);

  w19_2 = (a + b);

  w20_2 = (w19_2 + 10);

  w21_2 = (b + c);

  w22_2 = (w21_2 - 5);

  r347_out_3_7_2 = 1;

  r347_out_3_8_2 = (if (not (threshold <= w22_2)) then r347_out_3_7_2 else r347_out_2_6_2);

  r347_out_3_9_2 = (if (not (threshold >= w20_2)) then r347_out_3_8_2 else r347_out_2_6_2);

  r347_out_3_10_2 = (if (not (c <= w18_2)) then r347_out_3_9_2 else r347_out_2_6_2);

  r347_out_3_11_2 = (if (not (b <= 10)) then r347_out_3_10_2 else r347_out_2_6_2);

  w23_2 = (a + b);

  w24_2 = (w23_2 + 10);

  w25_2 = (b + c);

  w26_2 = (w25_2 - 5);

  r347_out_4_12_2 = 1;

  r347_out_4_13_2 = (if (not (threshold <= w26_2)) then r347_out_4_12_2 else r347_out_3_11_2);

  r347_out_4_14_2 = (if (not (threshold >= w24_2)) then r347_out_4_13_2 else r347_out_3_11_2);

  r347_out_4_15_2 = (if (not (c <= 0)) then r347_out_4_14_2 else r347_out_3_11_2);

  r347_out_4_16_2 = (if (not (a <= 0)) then r347_out_4_15_2 else r347_out_3_11_2);

  r347_out_1_18_2 = (if (not (symVar = 0)) then r347_out_4_16_2 else out);

  out = (if out_bool then 1 else 0);

  r347_out_1_18_2_bool = (false -> (if (r347_out_1_18_2 = 1) then true else false));

  symVar = 1;

tel;

node R_wrapper(
  a : int;
  b : int;
  c : int;
  threshold : int
) returns (
  out_0 : bool
);
var
  out_bool : bool;
let
  out_bool = R_node(a, b, c, threshold, (false -> (pre out_bool)));

  out_0 = out_bool;

tel;

node main(
  a : int;
  b : int;
  c : int;
  threshold : int
) returns (
  discovery_out : bool
);
var
  out : bool;
let
  --%MAIN;
  out = R_wrapper(a, b, c, threshold);

  discovery_out = T_node(a, b, c, threshold, out);

tel;
