
--This is the repair library of nodes that could be used in the repair.




node discoverLogicalAndOperand(in1:bool; in2:bool; in3:bool; myHole:intHole) returns (out:bool);

let
	out = if(myHole = 0)
	      then in1 and in2
	      else if(myHole=1)
	           then in1 and in3
	           else if (myHole=2)
	                 then in2 and in3
	                 else if(myHole=3)
	                      then in1 and in3
	                      else in1 and in2 and in3;
tel;



node discoverEqualIncrement(in1:int; in2:int; in3:int; myHole:intHole; myHole1:intHole; myHole2:intHole) returns
(out:int);

let
	out = if(myHole = 0)
	       then (in2 + myHole1)
	       else (in3 + myHole2);
tel;



node discoverLogic(ins:bool[n]; myHole:intHole) returns (out:bool);

let
	out = if(n = 0) then ins[0]
	      else if(myHole = 0)
	           then ins[n] and discoverLogic(ins[0..n-1])
	           else ins[n] or discoverLogic(ins[0..n-1])
	           else ins[n] => discoverLogic(ins[0..n-1])
tel;



