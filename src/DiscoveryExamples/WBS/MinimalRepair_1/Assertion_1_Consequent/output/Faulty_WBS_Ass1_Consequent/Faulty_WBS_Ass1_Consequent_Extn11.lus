node main(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int
) returns (
  p1 : bool
);
let
  --%MAIN;
  p1 = (true -> ((((pedal_r > 0) and (pedal_r <= 4)) and (not skid_r)) => repair( ((skid_r => (Sys_Mode <= -1)) or (Sys_Mode <= -1)) , discover_binary_Bool_1_Int_3_0(skid_r, pedal_r, NormalPressure_r, Sys_Mode) ) ));

  --%PROPERTY p1;

tel;
node discover_binary_Bool_1_Int_3_0(
  a0 : bool;
  i0 : int;
  i1 : int;
  i2 : int[  valhole_0_0 : inthole;
  valhole_1_1 : inthole;
  valhole_2_2 : inthole;
  const_hole0_3 : inthole;
  const_hole1_4 : inthole;
  const_hole2_5 : inthole;
  level_1_hole_0_6 : inthole;
  level_2_hole_7 : inthole]
) returns (
  out : bool
);
var
  bExprlevel_0_1_0 : bool;
  bExprlevel_0_2_0 : bool;
  bExprlevel_0_3_0 : bool;
  bExprlevel_1_0 : bool;
  bExprlevel_2 : bool;
let
  bExprlevel_0_1_0 = a0;

  bExprlevel_0_2_0 = (if (valhole_1_1 = 3) then (i1 <= const_hole1_4) else (if (valhole_1_1 = 4) then (i1 > const_hole1_4) else (i1 = const_hole1_4)));

  bExprlevel_0_3_0 = (if (valhole_2_2 = 3) then (i2 <= const_hole2_5) else (if (valhole_2_2 = 4) then (i2 > const_hole2_5) else (i2 = const_hole2_5)));

  bExprlevel_1_0 = (if (level_1_hole_0_6 = 1) then bExprlevel_0_1_0 else (if (level_1_hole_0_6 = 2) then bExprlevel_0_2_0 else (if (level_1_hole_0_6 = 3) then bExprlevel_0_3_0 else (if (level_1_hole_0_6 = 9) then (bExprlevel_0_1_0 and bExprlevel_0_2_0) else (if (level_1_hole_0_6 = 10) then (bExprlevel_0_1_0 and bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 12) then (bExprlevel_0_2_0 and bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 19) then (bExprlevel_0_1_0 or bExprlevel_0_2_0) else (if (level_1_hole_0_6 = 20) then (bExprlevel_0_1_0 or bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 22) then (bExprlevel_0_2_0 or bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 29) then (bExprlevel_0_1_0 xor bExprlevel_0_2_0) else (if (level_1_hole_0_6 = 30) then (bExprlevel_0_1_0 xor bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 32) then (bExprlevel_0_2_0 xor bExprlevel_0_3_0) else (if (level_1_hole_0_6 = 35) then (bExprlevel_0_1_0 => bExprlevel_0_2_0) else (if (level_1_hole_0_6 = 36) then (bExprlevel_0_1_0 => bExprlevel_0_3_0) else (bExprlevel_0_2_0 => bExprlevel_0_3_0)))))))))))))));

  bExprlevel_2 = (if (level_2_hole_7 = 0) then bExprlevel_1_0 else (if (level_2_hole_7 = 1) then (not bExprlevel_1_0) else (if (level_2_hole_7 = 2) then (bExprlevel_1_0 and bExprlevel_0_1_0) else (if (level_2_hole_7 = 3) then (bExprlevel_1_0 and bExprlevel_0_2_0) else (if (level_2_hole_7 = 4) then (bExprlevel_1_0 and bExprlevel_0_3_0) else (if (level_2_hole_7 = 5) then (bExprlevel_1_0 or bExprlevel_0_1_0) else (if (level_2_hole_7 = 6) then (bExprlevel_1_0 or bExprlevel_0_2_0) else (if (level_2_hole_7 = 7) then (bExprlevel_1_0 or bExprlevel_0_3_0) else (if (level_2_hole_7 = 8) then (bExprlevel_1_0 => bExprlevel_0_1_0) else (if (level_2_hole_7 = 9) then (bExprlevel_1_0 => bExprlevel_0_2_0) else (if (level_2_hole_7 = 10) then (bExprlevel_1_0 => bExprlevel_0_3_0) else (if (level_2_hole_7 = 11) then true else false))))))))))));

  out = bExprlevel_2;

tel;
