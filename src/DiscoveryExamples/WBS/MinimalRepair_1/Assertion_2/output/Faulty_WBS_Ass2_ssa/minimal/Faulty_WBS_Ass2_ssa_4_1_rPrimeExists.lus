node T_node(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  const_hole0_4 : int;
  const_hole1_5 : int;
  const_hole2_6 : int;
  const_hole3_7 : int;
  level_1_hole_0_8 : int;
  level_2_hole_9 : int
) returns (
  p1 : bool
);
let
  p1 = (true -> discover_binary_Bool_1_Int_4_ssa_0(skid_r, pedal_r, NormalPressure_r, Sys_Mode, AltPressure_r, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9));

tel;

node discover_binary_Bool_1_Int_4_ssa_0(
  a0 : bool;
  i0 : int;
  i1 : int;
  i2 : int;
  i3 : int;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  const_hole0_4 : int;
  const_hole1_5 : int;
  const_hole2_6 : int;
  const_hole3_7 : int;
  level_1_hole_0_8 : int;
  level_2_hole_9 : int
) returns (
  out : bool
);
var
  bExprlevel_0_1_0 : bool;
  bExprlevel_0_2_0 : bool;
  bExprlevel_0_3_0 : bool;
  bExprlevel_0_4_0 : bool;
  bExprlevel_1_0 : bool;
  bExprlevel_2 : bool;
let
  bExprlevel_0_1_0 = a0;

  bExprlevel_0_2_0 = (if (valhole_1_1 = 3) then (i1 <= const_hole1_5) else (if (valhole_1_1 = 4) then (i1 > const_hole1_5) else (i1 = const_hole1_5)));

  bExprlevel_0_3_0 = (if (valhole_2_2 = 3) then (i2 <= const_hole2_6) else (if (valhole_2_2 = 4) then (i2 > const_hole2_6) else (i2 = const_hole2_6)));

  bExprlevel_0_4_0 = (if (valhole_3_3 = 3) then (i3 <= const_hole3_7) else (if (valhole_2_2 = 4) then (i3 > const_hole3_7) else (i3 = const_hole3_7)));

  bExprlevel_1_0 = (if (level_1_hole_0_8 = 1) then bExprlevel_0_1_0 else (if (level_1_hole_0_8 = 2) then bExprlevel_0_2_0 else (if (level_1_hole_0_8 = 3) then bExprlevel_0_3_0 else (if (level_1_hole_0_8 = 4) then bExprlevel_0_4_0 else (if (level_1_hole_0_8 = 8) then (bExprlevel_0_1_0 and bExprlevel_0_2_0) else (if (level_1_hole_0_8 = 9) then (bExprlevel_0_1_0 and bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 10) then (bExprlevel_0_1_0 and bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 11) then (bExprlevel_0_2_0 and bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 12) then (bExprlevel_0_2_0 and bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 13) then (bExprlevel_0_3_0 and bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 14) then (bExprlevel_0_1_0 or bExprlevel_0_2_0) else (if (level_1_hole_0_8 = 15) then (bExprlevel_0_1_0 or bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 16) then (bExprlevel_0_1_0 or bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 17) then (bExprlevel_0_2_0 or bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 18) then (bExprlevel_0_2_0 or bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 19) then (bExprlevel_0_3_0 or bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 20) then (bExprlevel_0_1_0 => bExprlevel_0_2_0) else (if (level_1_hole_0_8 = 21) then (bExprlevel_0_1_0 => bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 22) then (bExprlevel_0_1_0 => bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 23) then (bExprlevel_0_2_0 => bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 24) then (bExprlevel_0_2_0 => bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 25) then (bExprlevel_0_3_0 => bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 26) then (bExprlevel_0_1_0 xor bExprlevel_0_2_0) else (if (level_1_hole_0_8 = 27) then (bExprlevel_0_1_0 xor bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 28) then (bExprlevel_0_1_0 xor bExprlevel_0_4_0) else (if (level_1_hole_0_8 = 29) then (bExprlevel_0_2_0 xor bExprlevel_0_3_0) else (if (level_1_hole_0_8 = 30) then (bExprlevel_0_2_0 xor bExprlevel_0_4_0) else (bExprlevel_0_3_0 xor bExprlevel_0_4_0))))))))))))))))))))))))))));

  bExprlevel_2 = (if (level_2_hole_9 = 0) then bExprlevel_1_0 else (if (level_2_hole_9 = 1) then (not bExprlevel_1_0) else (if (level_2_hole_9 = 2) then (bExprlevel_1_0 and bExprlevel_0_1_0) else (if (level_2_hole_9 = 3) then (bExprlevel_1_0 and bExprlevel_0_2_0) else (if (level_2_hole_9 = 4) then (bExprlevel_1_0 and bExprlevel_0_3_0) else (if (level_2_hole_9 = 5) then (bExprlevel_1_0 and bExprlevel_0_4_0) else (if (level_2_hole_9 = 6) then (bExprlevel_1_0 or bExprlevel_0_1_0) else (if (level_2_hole_9 = 7) then (bExprlevel_1_0 or bExprlevel_0_2_0) else (if (level_2_hole_9 = 8) then (bExprlevel_1_0 or bExprlevel_0_3_0) else (if (level_2_hole_9 = 9) then (bExprlevel_1_0 or bExprlevel_0_4_0) else (if (level_2_hole_9 = 10) then (bExprlevel_1_0 => bExprlevel_0_1_0) else (if (level_2_hole_9 = 11) then (bExprlevel_1_0 => bExprlevel_0_2_0) else (if (level_2_hole_9 = 12) then (bExprlevel_1_0 => bExprlevel_0_3_0) else (if (level_2_hole_9 = 13) then (bExprlevel_1_0 => bExprlevel_0_4_0) else (if (level_2_hole_9 = 14) then (bExprlevel_1_0 xor bExprlevel_0_1_0) else (if (level_2_hole_9 = 15) then (bExprlevel_1_0 xor bExprlevel_0_2_0) else (if (level_2_hole_9 = 16) then (bExprlevel_1_0 xor bExprlevel_0_3_0) else (if (level_2_hole_9 = 17) then (bExprlevel_1_0 xor bExprlevel_0_4_0) else (if (level_2_hole_9 = 18) then true else false)))))))))))))))))));

  out = bExprlevel_2;

tel;

node H_discovery(
  in : bool
) returns (
  out : bool
);
let
  out = (in -> (in and (pre out)));

tel;

node Check_spec(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  const_hole0_4 : int;
  const_hole1_5 : int;
  const_hole2_6 : int;
  const_hole3_7 : int;
  level_1_hole_0_8 : int;
  level_2_hole_9 : int;
  k : int
) returns (
  p1 : bool
);
var
  step : int;
  stepOK : bool;
let
  step = (0 -> (1 + (pre step)));

  stepOK = (if (step <= k) then T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9) else true);

  p1 = ((step >= k) and H_discovery(stepOK));

tel;

node main(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int;
  valhole_0_0 : int;
  valhole_1_1 : int;
  valhole_2_2 : int;
  valhole_3_3 : int;
  const_hole0_4 : int;
  const_hole1_5 : int;
  const_hole2_6 : int;
  const_hole3_7 : int;
  level_1_hole_0_8 : int;
  level_2_hole_9 : int
) returns (
  fail : bool
);
var
  ok_0 : bool;
  ok_1 : bool;
  ok_2 : bool;
  ok_3 : bool;
  ok_4 : bool;
  ok_5 : bool;
  ok_6 : bool;
  ok_7 : bool;
  ok_8 : bool;
  ok_9 : bool;
  ok_10 : bool;
  ok_11 : bool;
  ok_12 : bool;
  ok_13 : bool;
  ok_14 : bool;
  ok_15 : bool;
  ok_16 : bool;
  ok_17 : bool;
  pedal_r0 : int;
  autoBreak_r0 : bool;
  skid_r0 : bool;
  out_00 : int;
  out_10 : int;
  out_20 : int;
  pedal_r1 : int;
  autoBreak_r1 : bool;
  skid_r1 : bool;
  out_01 : int;
  out_11 : int;
  out_21 : int;
  pedal_r2 : int;
  autoBreak_r2 : bool;
  skid_r2 : bool;
  NormalPressure_r2 : int;
  AltPressure_r2 : int;
  Sys_Mode2 : int;
  pedal_r3 : int;
  autoBreak_r3 : bool;
  skid_r3 : bool;
  out_03 : int;
  out_13 : int;
  out_23 : int;
  pedal_r4 : int;
  autoBreak_r4 : bool;
  skid_r4 : bool;
  NormalPressure_r4 : int;
  AltPressure_r4 : int;
  Sys_Mode4 : int;
  pedal_r5 : int;
  autoBreak_r5 : bool;
  skid_r5 : bool;
  NormalPressure_r5 : int;
  AltPressure_r5 : int;
  Sys_Mode5 : int;
  pedal_r6 : int;
  autoBreak_r6 : bool;
  skid_r6 : bool;
  NormalPressure_r6 : int;
  AltPressure_r6 : int;
  Sys_Mode6 : int;
  pedal_r7 : int;
  autoBreak_r7 : bool;
  skid_r7 : bool;
  NormalPressure_r7 : int;
  AltPressure_r7 : int;
  Sys_Mode7 : int;
  pedal_r8 : int;
  autoBreak_r8 : bool;
  skid_r8 : bool;
  NormalPressure_r8 : int;
  AltPressure_r8 : int;
  Sys_Mode8 : int;
  pedal_r9 : int;
  autoBreak_r9 : bool;
  skid_r9 : bool;
  NormalPressure_r9 : int;
  AltPressure_r9 : int;
  Sys_Mode9 : int;
  pedal_r10 : int;
  autoBreak_r10 : bool;
  skid_r10 : bool;
  NormalPressure_r10 : int;
  AltPressure_r10 : int;
  Sys_Mode10 : int;
  pedal_r11 : int;
  autoBreak_r11 : bool;
  skid_r11 : bool;
  NormalPressure_r11 : int;
  AltPressure_r11 : int;
  Sys_Mode11 : int;
  pedal_r12 : int;
  autoBreak_r12 : bool;
  skid_r12 : bool;
  NormalPressure_r12 : int;
  AltPressure_r12 : int;
  Sys_Mode12 : int;
  pedal_r13 : int;
  autoBreak_r13 : bool;
  skid_r13 : bool;
  NormalPressure_r13 : int;
  AltPressure_r13 : int;
  Sys_Mode13 : int;
  pedal_r14 : int;
  autoBreak_r14 : bool;
  skid_r14 : bool;
  NormalPressure_r14 : int;
  AltPressure_r14 : int;
  Sys_Mode14 : int;
  pedal_r15 : int;
  autoBreak_r15 : bool;
  skid_r15 : bool;
  NormalPressure_r15 : int;
  AltPressure_r15 : int;
  Sys_Mode15 : int;
  pedal_r16 : int;
  autoBreak_r16 : bool;
  skid_r16 : bool;
  NormalPressure_r16 : int;
  AltPressure_r16 : int;
  Sys_Mode16 : int;
  pedal_r17 : int;
  autoBreak_r17 : bool;
  skid_r17 : bool;
  NormalPressure_r17 : int;
  AltPressure_r17 : int;
  Sys_Mode17 : int;
  fixedRout : bool;
  rPrimeOut : bool;
let
  --%MAIN;
  pedal_r0 = (3 -> (pre 4));

  autoBreak_r0 = (false -> (pre false));

  skid_r0 = (false -> (pre false));

  out_00 = (0 -> (pre 5));

  out_10 = (0 -> (pre 0));

  out_20 = (0 -> (pre 0));

  pedal_r1 = (8 -> (pre 1));

  autoBreak_r1 = (false -> (pre true));

  skid_r1 = (false -> (pre false));

  out_01 = (0 -> (pre 2));

  out_11 = (0 -> (pre 0));

  out_21 = (0 -> (pre 0));

  pedal_r2 = (1 -> (pre 1));

  autoBreak_r2 = (false -> (pre true));

  skid_r2 = (true -> (pre false));

  NormalPressure_r2 = (6 -> (pre 6));

  AltPressure_r2 = (8 -> (pre 0));

  Sys_Mode2 = (7 -> (pre 0));

  pedal_r3 = (4 -> (pre 4));

  autoBreak_r3 = (true -> (pre true));

  skid_r3 = (false -> (pre true));

  out_03 = (0 -> (pre 0));

  out_13 = (0 -> (pre 0));

  out_23 = (0 -> (pre 0));

  pedal_r4 = (8 -> (pre 11));

  autoBreak_r4 = (false -> (pre false));

  skid_r4 = (false -> (pre false));

  NormalPressure_r4 = (6 -> (pre 6));

  AltPressure_r4 = (9 -> (pre 12));

  Sys_Mode4 = (7 -> (pre 10));

  pedal_r5 = (2 -> (pre 2));

  autoBreak_r5 = (true -> (pre false));

  skid_r5 = (false -> (pre false));

  NormalPressure_r5 = (6 -> (pre 6));

  AltPressure_r5 = (8 -> (pre 9));

  Sys_Mode5 = (7 -> (pre 9));

  pedal_r6 = (3 -> (pre 2));

  autoBreak_r6 = (false -> (pre false));

  skid_r6 = (true -> (pre true));

  NormalPressure_r6 = (6 -> (pre 6));

  AltPressure_r6 = (8 -> (pre 12));

  Sys_Mode6 = (7 -> (pre 0));

  pedal_r7 = (3 -> (pre 2));

  autoBreak_r7 = (false -> (pre false));

  skid_r7 = (false -> (pre false));

  NormalPressure_r7 = (11 -> (pre 6));

  AltPressure_r7 = (13 -> (pre 14));

  Sys_Mode7 = (12 -> (pre 10));

  pedal_r8 = (8 -> (pre 2));

  autoBreak_r8 = (true -> (pre true));

  skid_r8 = (false -> (pre true));

  NormalPressure_r8 = (6 -> (pre 6));

  AltPressure_r8 = (9 -> (pre 8));

  Sys_Mode8 = (7 -> (pre 0));

  pedal_r9 = (3 -> (pre 10));

  autoBreak_r9 = (false -> (pre false));

  skid_r9 = (true -> (pre false));

  NormalPressure_r9 = (6 -> (pre 7));

  AltPressure_r9 = (8 -> (pre 0));

  Sys_Mode9 = (7 -> (pre 9));

  pedal_r10 = (3 -> (pre 4));

  autoBreak_r10 = (false -> (pre false));

  skid_r10 = (false -> (pre true));

  NormalPressure_r10 = (6 -> (pre 7));

  AltPressure_r10 = (8 -> (pre 10));

  Sys_Mode10 = (7 -> (pre 1));

  pedal_r11 = (3 -> (pre 0));

  autoBreak_r11 = (false -> (pre false));

  skid_r11 = (false -> (pre false));

  NormalPressure_r11 = (14 -> (pre 6));

  AltPressure_r11 = (16 -> (pre 13));

  Sys_Mode11 = (15 -> (pre 15));

  pedal_r12 = (8 -> (pre 4));

  autoBreak_r12 = (false -> (pre false));

  skid_r12 = (false -> (pre false));

  NormalPressure_r12 = (6 -> (pre 6));

  AltPressure_r12 = (9 -> (pre 0));

  Sys_Mode12 = (7 -> (pre 7));

  pedal_r13 = (3 -> (pre 4));

  autoBreak_r13 = (false -> (pre false));

  skid_r13 = (false -> (pre false));

  NormalPressure_r13 = (6 -> (pre 0));

  AltPressure_r13 = (8 -> (pre 0));

  Sys_Mode13 = (7 -> (pre 12));

  pedal_r14 = (1 -> (pre 3));

  autoBreak_r14 = (false -> (pre false));

  skid_r14 = (false -> (pre false));

  NormalPressure_r14 = (17 -> (pre 6));

  AltPressure_r14 = (19 -> (pre 16));

  Sys_Mode14 = (18 -> (pre 13));

  pedal_r15 = (2 -> (pre 1));

  autoBreak_r15 = (true -> (pre true));

  skid_r15 = (false -> (pre false));

  NormalPressure_r15 = (12 -> (pre 6));

  AltPressure_r15 = (14 -> (pre 11));

  Sys_Mode15 = (13 -> (pre 10));

  pedal_r16 = (15 -> (pre 1));

  autoBreak_r16 = (false -> (pre false));

  skid_r16 = (false -> (pre false));

  NormalPressure_r16 = (13 -> (pre 0));

  AltPressure_r16 = (16 -> (pre 12));

  Sys_Mode16 = (14 -> (pre 12));

  pedal_r17 = (4 -> (pre 23));

  autoBreak_r17 = (false -> (pre true));

  skid_r17 = (false -> (pre false));

  NormalPressure_r17 = (20 -> (pre 6));

  AltPressure_r17 = (22 -> (pre 19));

  Sys_Mode17 = (21 -> (pre 0));

  ok_0 = Check_spec(pedal_r0, autoBreak_r0, skid_r0, out_00, out_10, out_20, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_1 = Check_spec(pedal_r1, autoBreak_r1, skid_r1, out_01, out_11, out_21, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_2 = Check_spec(pedal_r2, autoBreak_r2, skid_r2, NormalPressure_r2, AltPressure_r2, Sys_Mode2, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_3 = Check_spec(pedal_r3, autoBreak_r3, skid_r3, out_03, out_13, out_23, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_4 = Check_spec(pedal_r4, autoBreak_r4, skid_r4, NormalPressure_r4, AltPressure_r4, Sys_Mode4, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_5 = Check_spec(pedal_r5, autoBreak_r5, skid_r5, NormalPressure_r5, AltPressure_r5, Sys_Mode5, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_6 = Check_spec(pedal_r6, autoBreak_r6, skid_r6, NormalPressure_r6, AltPressure_r6, Sys_Mode6, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_7 = Check_spec(pedal_r7, autoBreak_r7, skid_r7, NormalPressure_r7, AltPressure_r7, Sys_Mode7, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_8 = Check_spec(pedal_r8, autoBreak_r8, skid_r8, NormalPressure_r8, AltPressure_r8, Sys_Mode8, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_9 = Check_spec(pedal_r9, autoBreak_r9, skid_r9, NormalPressure_r9, AltPressure_r9, Sys_Mode9, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_10 = Check_spec(pedal_r10, autoBreak_r10, skid_r10, NormalPressure_r10, AltPressure_r10, Sys_Mode10, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_11 = Check_spec(pedal_r11, autoBreak_r11, skid_r11, NormalPressure_r11, AltPressure_r11, Sys_Mode11, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_12 = Check_spec(pedal_r12, autoBreak_r12, skid_r12, NormalPressure_r12, AltPressure_r12, Sys_Mode12, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_13 = Check_spec(pedal_r13, autoBreak_r13, skid_r13, NormalPressure_r13, AltPressure_r13, Sys_Mode13, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_14 = Check_spec(pedal_r14, autoBreak_r14, skid_r14, NormalPressure_r14, AltPressure_r14, Sys_Mode14, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_15 = Check_spec(pedal_r15, autoBreak_r15, skid_r15, NormalPressure_r15, AltPressure_r15, Sys_Mode15, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_16 = Check_spec(pedal_r16, autoBreak_r16, skid_r16, NormalPressure_r16, AltPressure_r16, Sys_Mode16, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  ok_17 = Check_spec(pedal_r17, autoBreak_r17, skid_r17, NormalPressure_r17, AltPressure_r17, Sys_Mode17, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9, 1);

  fail = (not ((not ok_17) and ((not ok_16) and ((not ok_15) and ((not ok_14) and ((not ok_13) and ((not ok_12) and ((not ok_11) and ((not ok_10) and ((not ok_9) and ((not ok_8) and ((not ok_7) and ((not ok_6) and ((not ok_5) and ((not ok_4) and (ok_3 and ((not ok_2) and (ok_1 and (ok_0 and (fixedRout and (not rPrimeOut)))))))))))))))))))));

  fixedRout = Fixed_T(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode);

  rPrimeOut = T_node(pedal_r, autoBreak_r, skid_r, NormalPressure_r, AltPressure_r, Sys_Mode, valhole_0_0, valhole_1_1, valhole_2_2, valhole_3_3, const_hole0_4, const_hole1_5, const_hole2_6, const_hole3_7, level_1_hole_0_8, level_2_hole_9);

  assert (true -> (valhole_0_0 = (pre valhole_0_0)));

  assert (true -> (valhole_1_1 = (pre valhole_1_1)));

  assert (true -> (valhole_2_2 = (pre valhole_2_2)));

  assert (true -> (valhole_3_3 = (pre valhole_3_3)));

  assert (true -> (const_hole0_4 = (pre const_hole0_4)));

  assert (true -> (const_hole1_5 = (pre const_hole1_5)));

  assert (true -> (const_hole2_6 = (pre const_hole2_6)));

  assert (true -> (const_hole3_7 = (pre const_hole3_7)));

  assert (true -> (level_1_hole_0_8 = (pre level_1_hole_0_8)));

  assert (true -> (level_2_hole_9 = (pre level_2_hole_9)));

  --%PROPERTY fail;

tel;

node Fixed_T(
  pedal_r : int;
  autoBreak_r : bool;
  skid_r : bool;
  NormalPressure_r : int;
  AltPressure_r : int;
  Sys_Mode : int
) returns (
  p1 : bool
);
let
  p1 = (true -> (((NormalPressure_r > 5) xor (Sys_Mode = 0)) and (Sys_Mode = 0)));

tel;
