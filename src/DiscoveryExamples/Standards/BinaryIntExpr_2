repair node discover_binary_Int_2(a:int; b:int) [valhole: inthole; level_1_hole:inthole;
level_2_hole:inthole; level_3_hole : inthole]
returns (out: bool);
var

bExprlevel_0:int;
bExprlevel_1:int;
bExprlevel_2:int;
bExprlevel_3:int;


let
    bExprlevel_0 = if (valhole = 0) then a else b;

    bExprlevel_1 = if(level_1_hole = 0) then - bExprlevel_0
                   else if(level_1_hole = 1) then bExprlevel_0 + bExprlevel_0
                   else if(level_1_hole = 2) then bExprlevel_0 - bExprlevel_0
                   else if(level_1_hole = 3) then bExprlevel_0 * bExprlevel_0
                   else bExprlevel_0;

    bExprlevel_2 = if(level_2_hole = 0) then - bExprlevel_1
                   else if(level_2_hole = 1) then bExprlevel_1 + bExprlevel_1
                   else if(level_2_hole = 2) then bExprlevel_1 - bExprlevel_1
                   else if(level_2_hole = 3) then bExprlevel_1 * bExprlevel_1
                   else bExprlevel_1;


    bExprlevel_3 = if(level_3_hole = 0) then not bExprlevel_1
                   else if(level_3_hole = 1) then bExprlevel_2 + bExprlevel_2
                   else if(level_3_hole = 2) then bExprlevel_2 - bExprlevel_2
                   else if(level_3_hole = 3) then bExprlevel_2 * bExprlevel_2
                   else bExprlevel_2;

    out = bExprlevel_3;
tel;
