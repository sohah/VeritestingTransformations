node T_node(
  step : bool;
  out : int
) returns (
  ok : bool
);
var
  count : int;
  p1 : bool;
let
  count = (if step then (0 -> (1 + (pre count))) else (pre count));

  p1 = (((count mod 2) = 0) => ((0 < out) and (out < 10)));

  ok = (true -> p1);

  --%PROPERTY p1;

tel;

node R_node(
  signal : int;
  start_btn_bool : bool;
  launch_btn_bool : bool;
  reset_btn_bool : bool;
  ignition_bool : bool
) returns (
  r347_start_btn_1_15_4_bool : bool;
  r347_launch_btn_1_17_4_bool : bool;
  r347_reset_btn_1_9_4_bool : bool;
  r347_ignition_r_1_7_4_bool : bool
);
var
  w5_1 : int;
  w7_1 : int;
  r347_countState_1_1_1 : int;
  r347_countState_1_3_1 : int;
  symVar : int;
  start_btn : int;
  launch_btn : int;
  reset_btn : int;
  ignition : int;
let
  w5_1 = 0;

  w7_1 = (w5_1 + 1);

  r347_countState_1_1_1 = w7_1;

  r347_countState_1_3_1 = (if (not (signal = 0)) then r347_countState_1_1_1 else 0);

  start_btn = (if start_btn_bool then 1 else 0);

  launch_btn = (if launch_btn_bool then 1 else 0);

  reset_btn = (if reset_btn_bool then 1 else 0);

  ignition = (if ignition_bool then 1 else 0);

  r347_start_btn_1_15_4_bool = (false -> (if (r347_start_btn_1_15_4 = 1) then true else false));

  r347_launch_btn_1_17_4_bool = (false -> (if (r347_launch_btn_1_17_4 = 1) then true else false));

  r347_reset_btn_1_9_4_bool = (false -> (if (r347_reset_btn_1_9_4 = 1) then true else false));

  r347_ignition_r_1_7_4_bool = (false -> (if (r347_ignition_r_1_7_4 = 1) then true else false));

  symVar = 1;

tel;

node R_wrapper(
  signal : int
) returns (
  out : bool
);
var
  start_btn_bool : bool;
  launch_btn_bool : bool;
  reset_btn_bool : bool;
  ignition_bool : bool;
let
  start_btn_bool, launch_btn_bool, reset_btn_bool, ignition_bool = R_node(signal, (false -> (pre start_btn_bool)), (false -> (pre launch_btn_bool)), (false -> (pre reset_btn_bool)), (false -> (pre ignition_bool)));

  out = ignition_bool;

tel;

node main(
  step : bool
) returns (
  discovery_out : bool
);
let
  --%MAIN;
  discovery_out = T_node(step, R_wrapper(step));

tel;
