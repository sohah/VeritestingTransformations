# project config for jpf-symbc extension
# only process this properties file if on top of the jpf-core model classes

jpf-symbc = ${config_path}

cast.path=${jpf-symbc}/lib/com.ibm.wala.cast-1.4.4-SNAPSHOT.jar

cast.js.path=${jpf-symbc}/lib/com.ibm.wala.cast.js-1.4.4-SNAPSHOT.jar

cast.js.rhino.path=${jpf-symbc}/lib/com.ibm.wala.cast.js.rhino-1.4.4-SNAPSHOT.jar

core.path=${jpf-symbc}/lib/com.ibm.wala.core-1.4.4-SNAPSHOT.jar

shrike.path=${jpf-symbc}/lib/com.ibm.wala.shrike-1.4.4-SNAPSHOT.jar

util.path=${jpf-symbc}/lib/com.ibm.wala.util-1.4.4-SNAPSHOT.jar

core.tests.path=${jpf-symbc}/lib/com.ibm.wala.core.tests-1.4.4-SNAPSHOT.jar

commons.io.path=${jpf-symbc}/lib/commons-io-2.6.jar

x10.wala.path=${jpf-symbc}/lib/x10.wala_2.6.1.201706301709.jar

bcel.path=${jpf-symbc}/lib/bcel.jar

jkind.path=${jpf-symbc}/lib/jkind.jar

# we need to use ';' delimiters so that NetBeans/Ant can use this as a path spec
wala.classpath=\
  ${cast.path};\
  ${cast.js.path};\
  ${cast.js.rhino.path};\
  ${core.path};\
  ${shrike.path};\
  ${util.path};\
  ${core.tests.path};\
  ${commons.io.path};\
  ${x10.wala.path};\
  ${bcel.path};


# we need to use ';' delimiters so that NetBeans/Ant can use this as a path spec
jpf-symbc.native_classpath=\
  ${jpf-symbc}/build/jpf-symbc.jar;\
  ${jpf-symbc}/build/jpf-symbc-annotations.jar;\
  ${jpf-symbc}/lib/libcvc3.jar;\
  ${jpf-symbc}/lib/choco-1_2_04.jar;\
  ${jpf-symbc}/lib/choco-solver-2.1.1-20100709.142532-2.jar;\
  ${jpf-symbc}/lib/com.microsoft.z3.jar;\
  ${jpf-symbc}/lib/STPJNI.jar;\
  ${jpf-symbc}/lib/scale.jar;\
  ${jpf-symbc}/lib/automaton.jar;\
  ${jpf-symbc}/lib/iasolver.jar;\
  ${jpf-symbc}/lib/string.jar;\
  ${jpf-symbc}/lib/solver.jar;\
  ${jpf-symbc}/lib/commons-lang-2.4.jar;\
  ${jpf-symbc}/lib/commons-math-1.2.jar;\
  ${jpf-symbc}/lib/coral.jar;\
  ${jpf-symbc}/lib/opt4j-2.4.jar;\
  ${jpf-symbc}/lib/libcvc3.jar;\
  ${jpf-symbc}/lib/org.sat4j.core.jar;\
  ${jpf-symbc}/lib/org.sat4j.pb.jar;\
  ${jpf-symbc}/lib/aima-core.jar;\
  ${jpf-symbc}/lib/yicesapijava.jar;\
  ${jpf-symbc}/lib/PathConditionsReliability-0.0.1.jar;\
  ${jpf-symbc}/lib/grappa.jar;\
  ${jpf-symbc}/lib/green.jar;\
  ${wala.classpath};\
  ${jkind.path}

jpf-symbc.Linux.amd64.native_libraries=\
  /usr/local/lib/libabc.so;\
  ${jpf-symbc}/lib/libz3java.so;\
  ${jpf-symbc}/lib/64bit/libz3.so;\
  ${jpf-symbc}/lib/64bit/libcvc3jni.so;
  
jpf-symbc.Windows.amd64.native_libraries=\
  ${jpf-symbc}/lib/libz3java.dll;\
  ${jpf-symbc}/lib/libz3.dll;

jpf-symbc.classpath=\
  ${jpf-symbc}/build/jpf-symbc-classes.jar;\

jpf-symbc.test_classpath=\
  build/tests


### configurations specific to the symbc project

jpf-symbc.peer_packages = gov.nasa.jpf.symbc

jvm.insn_factory.class=gov.nasa.jpf.symbc.SymbolicInstructionFactory

# no state matching
vm.storage.class=nil

# strings configuration
strings.z3str=/home/miroslav/Research/jpf/Z3-str/Z3-str.py
strings.do_versioning=no

strings.temp_file=./temp.z3str
strings.interactive_flags=-f ${strings.temp_file}
strings.save_temp_file_after_run=no
